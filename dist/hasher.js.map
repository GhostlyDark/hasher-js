{"version":3,"sources":["webpack://Hasher/webpack/bootstrap","webpack://Hasher/./src/Rom.js","webpack://Hasher/./src/util.js","webpack://Hasher/./src/RomRegion.js","webpack://Hasher/./node_modules/axios/lib/utils.js","webpack://Hasher/./src/platforms/Platform.js","webpack://Hasher/./node_modules/process/browser.js","webpack://Hasher/./src/hash/index.js","webpack://Hasher/./src/romUtils/smsUtil.js","webpack://Hasher/./node_modules/axios/lib/cancel/Cancel.js","webpack://Hasher/./node_modules/axios/lib/core/mergeConfig.js","webpack://Hasher/./node_modules/axios/lib/core/createError.js","webpack://Hasher/./node_modules/axios/lib/adapters/xhr.js","webpack://Hasher/./node_modules/axios/lib/defaults.js","webpack://Hasher/./node_modules/axios/lib/cancel/isCancel.js","webpack://Hasher/./node_modules/axios/lib/helpers/buildURL.js","webpack://Hasher/./node_modules/axios/lib/helpers/bind.js","webpack://Hasher/(webpack)/buildin/amd-options.js","webpack://Hasher/(webpack)/buildin/module.js","webpack://Hasher/(webpack)/buildin/global.js","webpack://Hasher/./src/romUtils/genUtil.js","webpack://Hasher/./src/platforms/Platform_gg_sms.js","webpack://Hasher/./src/romUtils/gbaUtil.js","webpack://Hasher/./src/romUtils/gbUtil.js","webpack://Hasher/./src/romUtils/snesUtil.js","webpack://Hasher/./src/RomHasher.js","webpack://Hasher/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://Hasher/./node_modules/axios/lib/helpers/spread.js","webpack://Hasher/./node_modules/axios/lib/cancel/CancelToken.js","webpack://Hasher/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://Hasher/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://Hasher/./node_modules/axios/lib/helpers/combineURLs.js","webpack://Hasher/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://Hasher/./node_modules/axios/lib/core/buildFullPath.js","webpack://Hasher/./node_modules/axios/lib/helpers/cookies.js","webpack://Hasher/./node_modules/axios/lib/core/enhanceError.js","webpack://Hasher/./node_modules/axios/lib/core/settle.js","webpack://Hasher/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://Hasher/./node_modules/axios/lib/core/transformData.js","webpack://Hasher/./node_modules/axios/lib/core/dispatchRequest.js","webpack://Hasher/./node_modules/axios/lib/core/InterceptorManager.js","webpack://Hasher/./node_modules/axios/lib/core/Axios.js","webpack://Hasher/./node_modules/axios/lib/axios.js","webpack://Hasher/./node_modules/axios/index.js","webpack://Hasher/./src/romDb.js","webpack://Hasher/./src/platforms/unknown.js","webpack://Hasher/./src/platforms/n64.js","webpack://Hasher/./node_modules/js-md5/src/md5.js","webpack://Hasher/./node_modules/js-sha1/src/sha1.js","webpack://Hasher/./src/hash/crc32.js","webpack://Hasher/./src/hash/crc16.js","webpack://Hasher/./src/hash/Hasher.js","webpack://Hasher/./src/platforms/nds.js","webpack://Hasher/./src/platforms/ngp.js","webpack://Hasher/./src/romUtils/GenHeader.js","webpack://Hasher/./src/platforms/gen.js","webpack://Hasher/./src/platforms/gg.js","webpack://Hasher/./src/platforms/sms.js","webpack://Hasher/./src/romUtils/GbaHeader.js","webpack://Hasher/./src/platforms/gba.js","webpack://Hasher/./src/romUtils/GbHeader.js","webpack://Hasher/./src/platforms/gb.js","webpack://Hasher/./src/romUtils/SnesHeader.js","webpack://Hasher/./src/platforms/snes.js","webpack://Hasher/./src/platforms/fds.js","webpack://Hasher/./src/ExtendedData.js","webpack://Hasher/./src/romUtils/iNESHeader.js","webpack://Hasher/./src/platforms/nes.js","webpack://Hasher/./src/platforms/index.js","webpack://Hasher/./src/platformLookup.js","webpack://Hasher/./node_modules/path-browserify/index.js","webpack://Hasher/./src/RomData.js","webpack://Hasher/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_util","Rom","romFile","_this","this","_classCallCheck","file","File","filename","fileExtension","getFileExtension","size","preview","binFormat","decodedHeader","loaded","readBytesFromBlob","contentsPreviewSize","then","byteArray","offset","length","callback","chunkSize","chunkCount","allowPartialChunks","completedCallback","_this2","allowPartials","remainingChunkCount","Math","floor","currentOffset","currentSliceSize","min","Promise","resolve","reject","reader","FileReader","getChunk","partial","blob","slice","readAsArrayBuffer","onload","Uint8Array","result","onerror","error","HexValue","prefix","preferredFormat","hexLength","format","formats","Decimal","toString","Hexadecimal","hexSymbol","valueAsHex","JustHex","DecAndHexParen","DecAndHexSlash","console","warn","upperCaseHex","toUpperCase","hex","len","justHex","hexSlash","hexParen","actualBlob","actualLength","Error","index","lastIndexOf","substr","toHex","digits","parseAscii","rom","ignoreTerminator","buffer","start","byteOffset","byteLength","view","String","fromCharCode","apply","indexOfNull","indexOf","_Rom","RomRegion","romRegion","isArray","val","isUndefined","isObject","_typeof","isPlainObject","getPrototypeOf","isFunction","forEach","obj","fn","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","stripBOM","content","charCodeAt","Platform","longname","knownExts","longName","knownExtensions","ExtendedData","_convertToBin","binRom","Blob","_decodeHeader","exDataCategories","Header","Hashes","ROM","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","push","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","algoMap","crc16","crc32","sha1","jsSha1","md5","jsMd5","asBlob","data","end","subBuffer","subarray","hashAsync","algo","progressCallback","hasher","cancel","processedByteCount","resultPromise","readNextChunk","currentEnd","update","poopMode","sha1Async","crc16Async","md5Async","crc32Async","hashMultiAsync","algos","hashers","map","headerOffsets","regionCodes","headerToken","smsUtil","verifyMagicNumber","romImage","headerOffset","Length","getHeaderOffset","romSize","getRegionCode","getProductCode","d0","d1","d2","d3","join","getVersion","getChecksum","Cancel","message","__CANCEL__","utils","config1","config2","config","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","mergeDeepProperties","prop","undefined","axiosKeys","otherKeys","keys","filter","enhanceError","code","request","response","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","headers","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","params","paramsSerializer","onreadystatechange","readyState","status","responseURL","responseHeaders","getAllResponseHeaders","responseType","responseText","statusText","onabort","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","abort","send","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","defaults","transformRequest","JSON","stringify","transformResponse","parse","maxContentLength","maxBodyLength","validateStatus","common","Accept","encode","serializedParams","parts","v","toISOString","hashmarkIndex","__webpack_amd_options__","webpackPolyfill","deprecate","paths","children","g","Function","eval","externalHeaderSize","interleaveChunkSize","interleaveHalfChunkSize","romIdentifiers","sega32X","interleaved","knownNames","headeredOffset","getRomInfo","identifier","unheaderedText","headeredText","iKnownName","knownName","unheaderedMatch","startsWith","headeredMatch","internalHeader","externalHeader","genUtil","convertRomToBin","_getRomInfo","startOffset","blobParts","deinterleaveBuffer","streamData","bytes","sourceRom","sourceOffset","destRom","destOffset","writeOffset","readOffset","deinterleaveChunk","Platform_gg_sms","regions","formatName","_possibleConstructorReturn","__proto__","region","fileRegion","headerValid","_get","addHeader","gbaUtil","verifyLogo","sum","calculateHeaderChecksum","lastByte","gbUtil","gbLogoChecksum","gbLogoOffset","gbLogoSize","gbHeaderOffset","calculateRomChecksum","snesUtil","calculateChecksum","getRomSize","mirroredSize","unmirroredSize","baseOffset","hasExternalHeader","endOfUnmirrored","iByte","startOfMirrored","endOfMirrored","mirrorCount","iMirror","totalSize","nextSize","hasGoodSmcHeader","smcSize","hasGoodSwcHeader","checkHiromOrLorom","romImagePreview","romImageOffset","hirom","lorom","exhirom","loromCheckum","getWord","loromChecksumOffset","loromComplement","loromChecksumCompOffset","hiromCheckum","hiromChecksumOffset","hiromComplement","hiromChecksumCompOffset","exhiromCheckum","exhiromChecksumOffset","exhiromComplement","exhiromChecksumCompOffset","lo","hi","exhiromThreshold","RomHasher","hashAlgos","hashRegions","hashlist","hashTasks","hashTaskBuckets","_parseHashlist","_queueHashTasks","_cancel","_cancelList","_progressCallback","split","_parts","_slicedToArray","regionName","algoName","find","reg","item","task","isSameRegion","hashBuckets","_partition","partition","_partition2","bucket","remainder","log","algoNames","hashItem","_this3","progressList","startTime","performance","now","hashPromises","progressListIndex","hashPromise","amt","totalProgress","reduce","hashDonePromise","hashResults","matches","match","all","endTime","cancelFunc","predicate","nonmatch","payload","isAxiosError","arr","CancelToken","executor","TypeError","resolvePromise","token","reason","throwIfRequested","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","parsed","ignoreDuplicateOf","line","relativeURL","isAbsoluteURL","combineURLs","requestedURL","write","expires","path","domain","secure","cookie","Date","toGMTString","RegExp","decodeURIComponent","remove","toJSON","description","number","fileName","lineNumber","columnNumber","stack","normalizedName","fns","transformData","isCancel","throwIfCancellationRequested","InterceptorManager","handlers","use","fulfilled","rejected","eject","id","h","dispatchRequest","mergeConfig","Axios","instanceConfig","interceptors","chain","interceptor","unshift","shift","getUri","createInstance","defaultConfig","context","instance","axios","promises","spread","default","_axios","dbs","dbNameValidator","getTitle","sha1_hex","db","dbPath","hasherDbPath","UnknownPlatform","N64Platform","getRomLayout","layout","romFormatNames","getBinFormat","chunkConverter","romLayout","bigEndian","byteSwapped","chunkToBin_byteswapped","wordSwapped","chunkToBin_wordswapped","littleEndian","chunkToBin_littleEndian","err","n64Identifier","n64Identifier_Byteswapped","n64Identifier_Wordswapped","n64Identifier_LittleEndian","bytesIn","bytesOut","swap","equalsAt","comparison","dataOffset","ERROR","WINDOW","root","JS_MD5_NO_WINDOW","WEB_WORKER","self","NODE_JS","JS_MD5_NO_NODE_JS","node","global","COMMON_JS","JS_MD5_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_MD5_NO_ARRAY_BUFFER","HEX_CHARS","EXTRA","SHIFT","OUTPUT_TYPES","BASE64_ENCODE_CHAR","blocks","buffer8","Uint32Array","JS_MD5_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","outputType","Md5","createMethod","nodeWrap","type","crypto","Buffer","nodeMethod","createHash","digest","sharedMemory","h0","h1","h2","h3","hBytes","finalized","hashed","first","notString","lastByteIndex","finalize","bc","da","arrayBuffer","base64","v1","v2","v3","base64Str","__WEBPACK_AMD_DEFINE_RESULT__","JS_SHA1_NO_NODE_JS","JS_SHA1_NO_COMMON_JS","Sha1","h4","block","j","dataView","DataView","setUint32","poly32","previous","byte","Crc32HasherObject","currentValue","poly16","Uint16Array","Crc16HasherObject","_hash","NdsPlatform","bytesToHash","NgpCopyright","NgpLicense","compareBytes","bytesA","offsetA","bytesB","offsetB","NgpPlatform","_genUtil","ioCodes","J","6","K","P","B","F","L","4","0","R","T","V","C","M","companyCodes","companyAltCodes","ACLD","ASCI","RSI","TREC","VRGN","WSTN","readString","readUint32","platform","copyright","gameName","altName","productID","ioSupport","modem","memo","romStart","romEnd","ramStart","ramEnd","checksum","ioSupportFormatted","ioCodeString","unknownCodes","device","parseIoString","copyrightFormatted","copyrightString","codeNum","parseInt","isNaN","companyName","textualCode","substring","parseCopyright","GenPlatform","getHeader","catch","header","_ref","_ref2","_genUtil$getRomInfo","getBytes","binRomData","GenHeader","GgPlatform","SmsPlatform","_gbaUtil","validGbaLogo","gameCode","makerCode","romVersion","headerChecksum","calculatedHeaderChecksum","headerChecksumValid","GbaPlatform","GbaHeader","_gbUtil","_GbHeader$gbCartTypeN","_GbHeader$gbCartSizeN","gbHeaderSize","cgbFlagNames","_defineProperty","_cgbFlagNames","GbHeader","validGbLogo","manufacturer","cgbFlagValue","cgbSupport","lincenseeEx","supportsSgb","cartTypeValue","cartType","gbCartTypeNames","romSizeValue","gbCartSizeNames","ramSizeValue","ramSize","gbRamSizeNames","japanRegion","licensee","romChecksum","calculatedRomChecksum","romChecksumValid","1","2","3","GbPlatform","addRom","_snesUtil","SnesHeader","internalHeaderOffset","mapping","valid","minimumRomSize","exhiromHeaderOffset","loromHeaderOffset","hiromHeaderOffset","checksumComplement","SnesPlatform","bytesPromise","hasFdsHeaderTag","FdsPlatform","addAny","category","label","assign","headerFlags","verticalMirroring","battery","trainer","fourScreen","mapper","vsUnisystem","playchoice10","nes2","pal","mappers","iNESHeader","magicNumber","magicNumberIsCorrect","prgRomCount","chrRomCount","prgRamCount","mirroring","isVertical","hasBattery","hasTrainer","palFlagSet","mapperName","NesPlatform","platformLookup","platformList","unknownPlatform","getAssociatedPlatform","ext","platformMatches","plat","isPlatformMatch","noContentMatches","platExt","matchMethod","plats","platformObj","normalizeArray","allowAboveRoot","up","last","splice","splitPathRe","splitPath","exec","xs","f","res","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","relative","from","to","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","basename","extname","getData","romData","platformIdent","dbInfo","dbMatch","getFormatName","extendedDataPromise","getExtendedData","extendedData","getHashRegions","performHashes","hashes","dbGetPromise","_romDb2","dbLookupPromise","meta","hashRegion","hashContent","rom_sha1","_processingCompletePromise","Hasher","_rom","algoList","fileAlgos","romAlgos","RomData","FormatHex","minLength","prefixed","isIE","ua","rv","edge","detectIE"],"mappings":"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AAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,SAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,SACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UA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","file":"hasher.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 71);\n","/*\r\n    Rom\r\n\r\n    Wraps a File or Blob and provides helper methods.\r\n*/\r\n// @ts-check\r\n\r\nimport { readBytesFromBlob, getFileExtension } from './util';\r\n\r\nclass Rom {\r\n    /**\r\n     * @param {File | Blob} romFile\r\n     */\r\n    constructor(romFile) {\r\n        /** The File object that is encapsulated */\r\n        this.file = romFile;\r\n\r\n        // @ts-ignore\r\n        if (romFile instanceof File || romFile.name) {\r\n            /** The name of the file */\r\n            // @ts-ignore\r\n            this.filename = romFile.name;\r\n            /** The file extension, not including the dot. */\r\n            this.fileExtension = getFileExtension(this.filename);\r\n        } else {\r\n            this.filename = null;\r\n            this.fileExtension = null;\r\n        }\r\n\r\n        /** Size of the ROM file in bytes */\r\n        this.size = this.file.size;\r\n\r\n        /** Preview of ROM file. Loaded asyncronously. \r\n         * Number of bytes loaded can be found at Rom.contentsPreviewSize. \r\n         * Value will be null until the data is read from the file. See\r\n         * the previewPromise property.\r\n         * @type {Uint8Array}\r\n         * */\r\n        this.preview = null;\r\n\r\n        /**\r\n         * Get/set. Stores the BIN format of this ROM, if this object was created\r\n         * from a ROM file.\r\n         * @type {Rom}\r\n         */\r\n        this.binFormat = null;\r\n\r\n        /** Get/set. Stores the decoded header for this ROM. */\r\n        this.decodedHeader = null;\r\n\r\n        /** Resolves once this object is ready to be accessed. */\r\n        this.loaded = readBytesFromBlob(romFile, 0, Rom.contentsPreviewSize)\r\n            .then(byteArray => {\r\n                this.preview = byteArray;\r\n                return null;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Promise. Gets part of the ROM image as a Uint8Array.\r\n     * @param {number} offset \r\n     * @param {number} length \r\n     * @returns {Promise<Uint8Array>}\r\n     */\r\n    getBytes(offset, length) {\r\n        return readBytesFromBlob(this.file, offset, length);\r\n    }\r\n\r\n    /**\r\n     * Async. Streams data from the ROM. Recommended for handling large files.\r\n     * \r\n     * @param {function(Uint8Array, number)} callback\r\n     * @param {number} offset \r\n     * @param {number} chunkSize \r\n     * @param {number} [chunkCount] The maximum number of chunks to read. Omit to read to end of file.\r\n     * @param {boolean} [allowPartialChunks] Defaults to true. If false, the last chunk of the file will be omitted if its size does not equal the specified chunk size.\r\n     * @param {function()} [completedCallback] If specified, will be called once streaming is complete.\r\n     * @returns Promise<any>\r\n     */\r\n    streamData(callback, offset, chunkSize, chunkCount, allowPartialChunks, completedCallback) {\r\n        var allowPartials = (allowPartialChunks != null) ? allowPartialChunks : true;\r\n        var remainingChunkCount = (chunkCount != null) ? chunkCount : (1 + Math.floor(this.size / chunkSize));\r\n        var currentOffset = offset;\r\n        var currentSliceSize = Math.min(this.size - currentOffset, chunkSize);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            var reader = new FileReader();\r\n\r\n            var getChunk = () => {\r\n                var partial = currentSliceSize != chunkSize;\r\n                if (currentOffset < this.size && remainingChunkCount > 0 && (allowPartials || !partial)) {\r\n                    var blob = this.file.slice(currentOffset, currentOffset + currentSliceSize);\r\n                    reader.readAsArrayBuffer(blob);\r\n                } else {\r\n                    // all done\r\n                    resolve();\r\n                    if (completedCallback) completedCallback();\r\n                }\r\n            }\r\n\r\n            var serveChunk = () => {\r\n                // @ts-ignore \r\n                callback(new Uint8Array(reader.result), currentOffset); // result is ArrayBuffer\r\n\r\n                currentOffset += chunkSize;\r\n                remainingChunkCount--;\r\n                currentSliceSize = Math.min(this.size - currentOffset, chunkSize);\r\n\r\n                getChunk();\r\n            }\r\n            \r\n            reader.onload = serveChunk;\r\n            reader.onerror = () => { reject(reader.error) };\r\n\r\n            getChunk();\r\n        });\r\n    }\r\n\r\n    \r\n}\r\n\r\n/** Number of bytes that will be loaded and readily accessible in the Rom.preview property. */\r\nRom.contentsPreviewSize = 0x800000;\r\n\r\n\r\nexport default Rom;","import { resolve } from \"path\";\r\n\r\n/**\r\n * Reads bytes from a blob into a Uint8Array\r\n * @param {Blob} blob \r\n * @param {number} [offset] \r\n * @param {number} [length]\r\n * @returns {Promise<Uint8Array>}\r\n */\r\nfunction readBytesFromBlob(blob, offset, length) {\r\n    return new Promise((resolve, reject) => {\r\n        if (length == null) length = blob.size;\r\n        if (offset == null) offset = 0;\r\n        var actualBlob = blob;\r\n        \r\n        var reader = new FileReader();\r\n        if (offset != 0 || length != blob.size) {\r\n            var actualLength = Math.min(blob.size - offset, length - offset);\r\n            actualBlob = blob.slice(offset, offset + actualLength);\r\n        }\r\n\r\n        reader.onload = function () {\r\n            resolve(new Uint8Array(reader.result)); \r\n        };\r\n        reader.onerror = function () {\r\n            reject(reader.error || Error(\"Unknown error\"));\r\n        }\r\n\r\n        reader.readAsArrayBuffer(actualBlob);\r\n    });\r\n\r\n}\r\n\r\n/**\r\n * Gets the file extension for the given filename\r\n * @param {string} filename \r\n */\r\nfunction getFileExtension(filename) {\r\n    if (!filename) filename = '';\r\n\r\n    var index = filename.lastIndexOf('.');\r\n    if (index >= 0) {\r\n        return filename.substr(index + 1);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\n/**\r\n * Parses ASCII-encoded text from a ROM image. Character values above 0x7F are undefined.\r\n * @param {Uint8Array} rom \r\n * @param {number} offset \r\n * @param {number} length \r\n * @param {boolean} [ignoreTerminator] - If true, the returned string will not be truncated at the first null terminator character\r\n * @returns {string}\r\n */\r\nfunction parseAscii(rom, offset, length, ignoreTerminator) {\r\n    // Create a view into the rom\r\n    var buffer = rom.buffer;\r\n    var start = Math.min(rom.byteOffset + offset, buffer.byteLength); // no further than end of buffer\r\n    var len = Math.min(buffer.byteLength - start, length); // no longer than to end of buffer \r\n    \r\n    var view = new Uint8Array(buffer, start, len);\r\n\r\n    // Use this view as an array of character codes\r\n    var result = String.fromCharCode.apply(null, view);\r\n\r\n    // Truncate the string at the first null terminator, if applicable\r\n    if (!ignoreTerminator) {\r\n        var indexOfNull = result.indexOf(\"\\x00\");\r\n        if (indexOfNull >= 0) return result.substr(0, indexOfNull);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Converts an integer value to a hex string\r\n * @param {number} value\r\n * @param {number} digits\r\n * @returns {string}\r\n */\r\nfunction toHex (value, digits) {\r\n    var result = value.toString(16);\r\n    while (result.length < digits) result = \"0\" + result;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Represents a value in extended ROM data.\r\n */    \r\nclass HexValue { \r\n    /**\r\n     * Creates an Extended\r\n     * @param {string} [prefix] - Prefix to be appended to the formatted string. Should include a trailing space if a space between the prefix and value is desired.\r\n     * @param {number} value - Numeric value to be displayed\r\n     * @param {string} format - Preferred method of formatting the value. Should be a value from ExtendedData.Formats\r\n     */\r\n    constructor(value, prefix, preferredFormat) { \r\n        this.prefix = prefix || \"\";\r\n        this.value = value || 0;\r\n        this.preferredFormat = preferredFormat;\r\n        /** Specifies the minimum number of digits to display a hex value with. */\r\n        this.hexLength = 0;\r\n    }\r\n\r\n    /**\r\n     * Gets a formatted string\r\n     * @param {string} format? - Optional. A value from ExtendedData.Formats may be specified.\r\n     */\r\n    format(format) {\r\n        format = format || this.preferredFormat;\r\n        switch (format) { \r\n            case HexValue.formats.Decimal:\r\n                return this.prefix + this.value.toString();\r\n            case HexValue.formats.Hexadecimal:\r\n                return this.prefix + HexValue.hexSymbol + this.valueAsHex();\r\n            case HexValue.formats.JustHex:\r\n                return this.valueAsHex();\r\n            case HexValue.formats.DecAndHexParen:\r\n                return this.prefix + this.value.toString() + \" (\" + HexValue.hexSymbol + this.valueAsHex() + \")\";\r\n            case HexValue.formats.DecAndHexSlash:\r\n                return this.prefix + this.value.toString() + \"/\" + HexValue.hexSymbol + this.valueAsHex() + \"\";\r\n            default:\r\n                console.warn(\"Invalid prefix type: \" + this.preferredFormat);\r\n                return this.prefix + HexValue.hexSymbol + this.valueAsHex();\r\n        }\r\n\r\n    }\r\n\r\n    valueAsHex() { \r\n        var result = this.value.toString(16);\r\n        if (HexValue.upperCaseHex) {\r\n            result = result.toUpperCase();\r\n        }\r\n\r\n        while (result.length < this.hexLength) {\r\n            result = \"0\" + result;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    toString() { \r\n        return this.format();\r\n    }\r\n}\r\n\r\n/** Contains constant values to specify formatting styles. */\r\nHexValue.formats = {\r\n    /** Decimal number */\r\n    \"Decimal\": \"Decimal\",\r\n    /** Hex number with hex value specifier (see HexValue.hexSymbol) */\r\n    \"Hexadecimal\": \"Hexadecimal\",\r\n    /** Hex number without hex value specifier (see HexValue.hexSymbol) */\r\n    \"JustHex\": \"JustHex\",\r\n    /** Decimal with hex in parens */\r\n    \"DecAndHexParen\": \"DecAndHexParen\",\r\n    /** Decimal with hex with slash between */\r\n    \"DecAndHexSlash\": \"DecAndHexSlash\",\r\n}\r\n\r\n/** Application-wide setting to set casing of formatted strings. */\r\nHexValue.upperCaseHex = true;\r\n\r\n/** Application-wide setting to specify the symbol used to denote hexadecimal, e.g. \"$\" or \"0x\". */\r\nHexValue.hexSymbol = \"$\";\r\n\r\n/**\r\n * Convenience method that gets a hex-formatted object.\r\n * @param {string} [prefix]\r\n * @param {number} value \r\n * @param {number} [len]\r\n */\r\nHexValue.hex = function (value, len, prefix) { \r\n    var result = new HexValue(value, prefix, HexValue.formats.Hexadecimal);\r\n    if (len || len === 0)\r\n        result.hexLength = len;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Convenience method that gets a hex-formatted object without a hexadecimal specifier.\r\n * @param {string} [prefix]\r\n * @param {number} value \r\n * @param {number} [len]\r\n */\r\nHexValue.justHex = function (value, len, prefix) { \r\n    var result = new HexValue(value, prefix, HexValue.formats.JustHex);\r\n    if (len || len === 0)\r\n        result.hexLength = len;\r\n    return result;\r\n}\r\n\r\n\r\n/**\r\n * Convenience method that gets a hex-formatted object.\r\n * @param {string} [prefix]\r\n * @param {number} value \r\n * @param {number} [len]\r\n */\r\nHexValue.hexSlash = function (value, len, prefix) { \r\n    var result =  new HexValue(value, prefix, HexValue.formats.DecAndHexSlash);\r\n    if (len || len === 0)\r\n        result.hexLength = len;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Convenience method that gets a hex-formatted object.\r\n * @param {string} [prefix]\r\n * @param {number} value \r\n * @param {number} [len]\r\n */\r\nHexValue.hexParen = function (value, len, prefix) { \r\n    var result = new HexValue(value, prefix, HexValue.formats.DecAndHexParen);\r\n    if (len || len === 0)\r\n        result.hexLength = len;\r\n    return result;\r\n}\r\n\r\n// /**\r\n//  * Returns a number as a hexadecimal string with the casing specified by HexValue.upperCaseHex\r\n//  * @param {number} value \r\n//  */\r\n// HexValue.toHex = function (value) { \r\n//     var result = (value || 0).toString(16);\r\n//     if (HexValue.upperCaseHex) result = result.toUpperCase();\r\n//     return result;\r\n// }\r\n\r\nexport { readBytesFromBlob, getFileExtension, toHex, parseAscii, HexValue };\r\n","/*\r\n    \r\n*/\r\n\r\nimport Rom from './Rom';\r\n\r\nclass RomRegion{\r\n    /**\r\n     * @param {string} name \r\n     * @param {Blob | Uint8Array | Rom} rom \r\n     * @param {number} offset \r\n     * @param {number} length \r\n     */\r\n    constructor(name, rom, offset, length) {\r\n        /** Name of the region. */\r\n        this.name = name;\r\n        /** Location of the region. */\r\n        this.offset = offset;\r\n        /** Size of the region. */\r\n        this.length = length;\r\n        /** Data this region refers to.\r\n         * @type {Uint8Array | Blob | Rom}\r\n         */\r\n        this.rom = rom;\r\n    \r\n        Object.defineProperty(this, 'rom', { value: rom, enumerable: false });\r\n    }\r\n\r\n    /**\r\n     * Compares whether two RomRegion objects refer to the same region of\r\n     * memory on the same ROM image\r\n     * @param {RomRegion} romRegion \r\n     */\r\n    isSameRegion(romRegion) {\r\n        return this.rom === romRegion.rom && this.offset === romRegion.offset && this.length === romRegion.length;\r\n    }\r\n}\r\n\r\nexport default RomRegion;","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","/*\r\n    Provides a base class for common functionality \r\n*/\r\n\r\nimport RomRegion from '../RomRegion';\r\nimport Rom from '../Rom';\r\nimport ExtendedData from '../ExtendedData';\r\n\r\nclass Platform {\r\n    /**\r\n     * \r\n     * @param {string} name Short name of the platform, typically an acronym\r\n     * @param {string} longname Long name of the platform, for display purposes\r\n     * @param {string[]} knownExts File extensions associated with this platform, not including the dot.\r\n     */\r\n    constructor(name, longname, knownExts) {\r\n        /** Short name of the platform, typically an acronym. */\r\n        this.name = name;\r\n        /** Long name of the platform, for display purposes. */\r\n        this.longName = longname;\r\n        /** Array of extensions associated with this platform. Used to identify\r\n         * file types when contents appear to be ambiguous. \r\n         */\r\n        this.knownExtensions = knownExts;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the specified ROM is for this platform, based on a platform-specific heuristic.\r\n     * @param {Rom} rom ROM image to examine\r\n     * @returns {boolean} Boolean indicating whether the ROM appears to belong to this platform based on ROM contents\r\n     */\r\n    isPlatformMatch(rom) {\r\n        throw Error(\"Function is not implemented.\")\r\n    }\r\n\r\n    /**\r\n     * Determines whether the specified ROM contains an external (non-embedded) header using platform-specific logic\r\n     * @param {Rom} rom ROM image to examine\r\n     * @returns {boolean} Boolean indicating whether the ROM contains an external header\r\n     */\r\n    hasExternalHeader(rom) {\r\n        return false\r\n    }\r\n\r\n    /**\r\n         * (Abstract) Promise. Returns an array of region descriptors for sections of the ROM to be hashed\r\n         * @param {Rom} rom ROM image to examine\r\n         * @returns {Promise<RomRegion[]>} Array of region descriptors\r\n         */\r\n    getHashRegions(rom) {\r\n        throw Error(\"Function is not implemented.\")\r\n    }\r\n\r\n    /**\r\n     * (Virtual) Promise. Returns an array of extended information for the ROM image. Inheritors \r\n     * should call the base class method and update the returned object.\r\n     * @param {Rom} rom ROM image to examine\r\n     * @returns {Promise<ExtendedData>} Array of details\r\n     */\r\n    getExtendedData(rom) {\r\n        return Promise.resolve(new ExtendedData());\r\n    }\r\n\r\n    /**\r\n     * (Abstract) Gets a display name for the ROM file format.\r\n     * @param {Rom} rom ROM image to examine\r\n     * @returns {string}\r\n     */\r\n    getFormatName(rom) {\r\n        throw Error(\"Function is not implemented.\")\r\n    }\r\n\r\n    /**\r\n     * (Final) Promise. Returns a BIN-formatted version of the ROM.\r\n     * @param {Rom} rom ROM image to examine\r\n     * @returns {Promise<Rom>}\r\n     */\r\n    getBinFormat(rom) {\r\n        if (rom.binFormat) return Promise.resolve(rom.binFormat);\r\n\r\n        return this._convertToBin(rom)\r\n            //@ts-ignore\r\n            .then(binRom => {\r\n                if (binRom instanceof Blob) {\r\n                    rom.binFormat = new Rom(binRom);\r\n                } else if (rom instanceof Rom) {\r\n                    rom.binFormat = binRom;\r\n                } else {\r\n                    return Promise.reject(\"BIN ROM invalid type\");\r\n                }\r\n\r\n                return rom.binFormat;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * (Virtual/Private) Promise. Converts a ROM to BIN format. Default implementation\r\n     * returns the original ROM. Should return a Blob.\r\n     * @param {Rom} rom ROM image to examine\r\n     * @returns {Promise<Blob | Rom>}\r\n     */\r\n    _convertToBin(rom) {\r\n        return Promise.resolve(rom);\r\n    }\r\n\r\n    /**\r\n     * (Virtual) Returns decoded header, if applicable.\r\n     * @param {Rom} rom ROM image to examine\r\n     * @returns {Promise<any>}\r\n     */\r\n    getHeader(rom) {\r\n        if (rom.decodedHeader) return Promise.resolve(rom.decodedHeader);\r\n\r\n        return Promise.resolve(this._decodeHeader(rom));\r\n    }\r\n\r\n    /**\r\n     * (Virtual/Private) Promise. Override to add header decoding logic. Return either\r\n     * a header or a promise that resolves to a header.\r\n     * @param {Rom} rom ROM image to examine\r\n     * @returns {Promise<any> | any}\r\n     */\r\n    _decodeHeader(rom) {\r\n        return null;\r\n    }\r\n}\r\n\r\nPlatform.exDataCategories = {\r\n    \"Header\": \"Header\",\r\n    \"Hashes\": \"Hashes\",\r\n    \"ROM\": \"ROM\",\r\n};\r\n\r\n\r\nexport default Platform;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*  \r\n    Provides functions that perform both syncronous and asyncronous hashing.\r\n    Currently the async functions do not implement any kind of explicit\r\n    background worker or CPU-yielding mechanism.\r\n\r\n    Cancellation:\r\n        The Promise returned by the async functions includes a method, cancel(), which\r\n        will abort the operation. When a hash in cancelled, the promise will resolve to\r\n        null.\r\n */\r\n\r\n// @ts-check\r\n\r\nimport { Hasher } from './Hasher';\r\nimport crc16 from './crc16';\r\nimport crc32 from './crc32';\r\nimport jsSha1 from 'js-sha1';\r\nimport jsMd5 from 'js-md5';\r\n\r\n/** An object that can be indexed to get Hasher objects associated with a string representation\r\n *  @type {{[x: string]: Hasher}}\r\n */\r\nvar algoMap = {\r\n    crc16: crc16,\r\n    crc32: crc32,\r\n    // @ts-ignore\r\n    sha1: jsSha1,\r\n    md5: jsMd5\r\n};\r\n\r\n/** The chunk size used */\r\nconst chunkSize = 0x4000;\r\n\r\n/**\r\n * Converts data from a Uint8Array to a blob\r\n * @param {Uint8Array} data \r\n * @param {number} offset \r\n * @param {number} length \r\n */\r\nfunction asBlob(data, offset, length) {\r\n    var end = offset + length;\r\n    var subBuffer = data;\r\n\r\n    if (offset != 0 || length != data.length) {\r\n        if (data.subarray) {\r\n            subBuffer = data.subarray(offset, end);\r\n        } else {\r\n            subBuffer = data.slice(offset, end);\r\n        }\r\n    }\r\n\r\n    return new Blob([subBuffer]);\r\n}\r\n\r\n/**\r\n * \r\n * @param {Hasher} algo An object that implements the appropriate digesting interface (create() method which produces an object with update() and hex() methods)\r\n * @param {Blob | Uint8Array} buffer \r\n * @param {number} offset \r\n * @param {number} length \r\n * @param {function(number): void} [progressCallback]\r\n * @returns {Promise<string>}\r\n */\r\nfunction hashAsync(algo, buffer, offset, length, progressCallback) {\r\n    var end = offset + length;\r\n    var hasher = algo.create(); \r\n\r\n    // Convert byte array to a blob\r\n    if (buffer instanceof Uint8Array) {\r\n        buffer = asBlob(buffer, offset, length);\r\n        offset = 0;\r\n    };\r\n\r\n    /** When set to true, will abort the hash operation */\r\n    var cancel = false;\r\n    var processedByteCount = 0;\r\n    /** @type {Promise & {cancel?: function(): void}} */\r\n    var resultPromise = new Promise((resolve, reject) => {\r\n        if (buffer instanceof Blob) {\r\n            end = Math.min(end, buffer.size);\r\n\r\n            var blob = buffer;\r\n            var reader = new FileReader();\r\n            var currentOffset = offset;\r\n            var readNextChunk = () => {\r\n                if (currentOffset < end) {\r\n                    if (cancel) {\r\n                        resolve(null);\r\n                        return;\r\n                    }\r\n\r\n                    // don't include anything beyond end of blob in length\r\n                    var currentEnd = Math.min(currentOffset + chunkSize, end);\r\n                    reader.readAsArrayBuffer(blob.slice(currentOffset, currentEnd));\r\n                    currentOffset += chunkSize;\r\n                } else {\r\n                    // We've finished processing the file\r\n                    resolve(hasher.hex());\r\n                }\r\n            };\r\n            var dataReady = () => {\r\n                // @ts-ignore\r\n                var data = new Uint8Array(reader.result);\r\n                hasher.update(data);\r\n                processedByteCount += data.length;\r\n                if (progressCallback) progressCallback(processedByteCount / length);\r\n\r\n                // @ts-ignore\r\n                if (window.poopMode) {\r\n                    // IE will freeze if we don't explicitly yield the CPU\r\n                    setTimeout(readNextChunk, 1);\r\n                } else {\r\n                    readNextChunk();\r\n                }\r\n            };\r\n\r\n            reader.onload = dataReady;\r\n            reader.onerror = () => { reject(reader.error || Error(\"Unknown error reading a file\")) };\r\n\r\n            // start it off\r\n            readNextChunk();\r\n        } else {\r\n            reject(Error('unknown input type'));\r\n        }\r\n    });\r\n\r\n    resultPromise.cancel = () => cancel = true;\r\n    return resultPromise;\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {(Hasher | string)[]} algos An object that implements the appropriate digesting interface (create() method which produces an object with update() and hex() methods)\r\n * @param {Blob | Uint8Array} buffer \r\n * @param {number} offset \r\n * @param {number} length \r\n * @param {function(number): void} [progressCallback]\r\n * @returns {Promise<string[]>}\r\n */\r\nfunction hashMultiAsync(algos, buffer, offset, length, progressCallback) {\r\n    var end = offset + length;\r\n    var hasherObjets = algos = algos.map(algo => {\r\n        if (typeof algo === 'string') {\r\n            var result = algoMap[algo];\r\n            if (!result) throw Error('Unknown algorithm');\r\n            return result;\r\n        } else {\r\n            return algo;        }\r\n    });\r\n    var hashers = hasherObjets.map(algo => algo.create());\r\n\r\n    // Convert byte array to a blob\r\n    if (buffer instanceof Uint8Array) {\r\n        buffer = asBlob(buffer, offset, length);\r\n        offset = 0;\r\n    };\r\n\r\n    /** When set to true, will abort the hash operation */\r\n    var cancel = false;\r\n    var processedByteCount = 0;\r\n    /** @type {Promise & {cancel?: function(): void}} */\r\n    var resultPromise = new Promise((resolve, reject) => {\r\n        if (buffer instanceof Blob) {\r\n            end = Math.min(end, buffer.size);\r\n\r\n            var blob = buffer;\r\n            var reader = new FileReader();\r\n            var currentOffset = offset;\r\n            var readNextChunk = () => {\r\n                if (currentOffset < end) {\r\n                    if (cancel) {\r\n                        resolve(null);\r\n                        return;\r\n                    }\r\n\r\n                    // don't include anything beyond end of blob in length\r\n                    var currentEnd = Math.min(currentOffset + chunkSize, end);\r\n                    reader.readAsArrayBuffer(blob.slice(currentOffset, currentEnd));\r\n                    currentOffset += chunkSize;\r\n                } else {\r\n                    // We've finished processing the file\r\n                    resolve(hashers.map(hasher => hasher.hex()));\r\n                }\r\n            };\r\n            var dataReady = () => {\r\n                // @ts-ignore\r\n                var data = new Uint8Array(reader.result);\r\n                //hasher.update(data);\r\n                hashers.forEach(hasher => hasher.update(data));\r\n                processedByteCount += data.length;\r\n                if (progressCallback) progressCallback(processedByteCount / length);\r\n\r\n                // @ts-ignore\r\n                if (window.poopMode) {\r\n                    // IE will freeze if we don't explicitly yield the CPU\r\n                    setTimeout(readNextChunk, 1);\r\n                } else {\r\n                    readNextChunk();\r\n                }\r\n            };\r\n\r\n            reader.onload = dataReady;\r\n            reader.onerror = () => { reject(reader.error || Error(\"Unknown error reading a file\")) };\r\n\r\n            // start it off\r\n            readNextChunk();\r\n        } else {\r\n            reject(Error('unknown input type'));\r\n        }\r\n    });\r\n\r\n    resultPromise.cancel = () => cancel = true;\r\n    return resultPromise;\r\n}\r\n\r\n/**\r\n * Promise. Resolves to a hex string containing the MD5 digest of the buffer.\r\n * @param {Uint8Array} buffer \r\n * @param {number} offset \r\n * @param {number} length \r\n * @param {function(number): void} [progressCallback]\r\n * @returns {Promise<string>}\r\n */\r\nfunction md5Async(buffer, offset, length, progressCallback) {\r\n    return hashAsync(jsMd5, buffer, offset, length, progressCallback);\r\n}\r\n\r\n\r\n/**\r\n * Promise. Resolves to a hex string containing the SHA-1 digest of the buffer.\r\n * @param {Uint8Array} buffer \r\n * @param {number} offset \r\n * @param {number} length \r\n * @param {function(number): void} [progressCallback]\r\n * @returns {Promise<string>}\r\n */\r\nfunction sha1Async(buffer, offset, length, progressCallback) {\r\n    // For some reason, jsSha1.create is not showing up in the type definition... but it's definitely there\r\n    // @ts-ignore\r\n    return hashAsync(jsSha1, buffer, offset, length, progressCallback);\r\n}\r\n\r\n/**\r\n * Promise. Resolves to a hex string containing the CRC16 digest of the buffer.\r\n * @param {Uint8Array} buffer \r\n * @param {number} offset \r\n * @param {number} length \r\n * @param {function(number): void} [progressCallback]\r\n * @returns {Promise<string>}\r\n */\r\nfunction crc16Async(buffer, offset, length, progressCallback) {\r\n    return hashAsync(crc16, buffer, offset, length, progressCallback);\r\n}\r\n\r\n/**\r\n * Promise. Resolves to a hex string containing the CRC32 digest of the buffer.\r\n * @param {Uint8Array} buffer \r\n * @param {number} offset \r\n * @param {number} length \r\n * @param {function(number): void} [progressCallback]\r\n * @returns {Promise<string>}\r\n */\r\nfunction crc32Async(buffer, offset, length, progressCallback) {\r\n    return hashAsync(crc32, buffer, offset, length, progressCallback);\r\n}\r\n\r\nexport { jsSha1 as sha1, crc16, crc32, sha1Async, crc16Async, md5Async, crc32Async , hashMultiAsync};","// @ts-check\r\n\r\nvar headerOffsets = [0x7FF0, 0x3FF0, 0x1FF0];\r\nvar defaultHeaderOffset = 0x7FF0;\r\n\r\nvar regionCodes = [];\r\nregionCodes[3] = \"SMS Japan\";\r\nregionCodes[4] = \"SMS Export\";\r\nregionCodes[5] = \"GG Japan\";\r\nregionCodes[6] = \"GG Export\";\r\nregionCodes[7] = \"GG International\";\r\n\r\nconst headerToken = [0x54, 0x4D, 0x52, 0x20, 0x53, 0x45, 0x47, 0x41];\r\n\r\n\r\nvar smsUtil = {\r\n\r\n    /**\r\n     * Verifies the ROM header contains the identifying marker\r\n     * @param {Uint8Array} rom \r\n     * @param {number} headerOffset optional\r\n     * @returns {boolean}\r\n     */\r\n    verifyMagicNumber: function verifyMagicNumber(romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = defaultHeaderOffset;\r\n\r\n        if (romImage.Length < headerOffset + 0x10) return false;\r\n\r\n        for (var i = 0; i < headerToken.length; i++) {\r\n            if (romImage[i + headerOffset] != headerToken[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Gets the location the header is expected to be found, given the size of a ROM.\r\n     * Returns a number, or null a ROM that is too small.\r\n     * @param {number} romSize\r\n     * @returns {number}\r\n     */\r\n    getHeaderOffset: function (romSize) {\r\n        // highest known location that falls within the ROM\r\n        for (var i = 0; i < headerOffsets.length; i++) {\r\n            if (headerOffsets[i] < romSize) return headerOffsets[i];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /**\r\n    * Gets the region code for the given ROM. See regionCodes.\r\n    * @param {Uint8Array} rom \r\n    * @param {number} headerOffset optional\r\n    * @returns {number}\r\n    */\r\n    getRegionCode: function (romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = defaultHeaderOffset;\r\n\r\n        return romImage[headerOffset + 0xF] >> 4;\r\n    },\r\n\r\n    \r\n    /**\r\n    * Gets the product code for the given ROM.\r\n    * @param {Uint8Array} rom \r\n    * @param {number} headerOffset optional\r\n    * @returns {string}\r\n    */\r\n    getProductCode: function (romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = defaultHeaderOffset;\r\n\r\n        // Stored in BCD, but highest digit is allowed to overflow\r\n        var d0 = romImage[headerOffset + 0xC] & 0xF;\r\n        var d1 = romImage[headerOffset + 0xC] >> 4;\r\n        var d2 = romImage[headerOffset + 0xD] & 0xF;\r\n        var d3 = romImage[headerOffset + 0xD] >> 4;\r\n        var dRest = romImage[headerOffset + 0xE] >> 4;\r\n\r\n        return [dRest, d3, d2, d1, d0].join('');\r\n    },\r\n\r\n        /**\r\n    * Gets the region code for the given ROM. See regionCodes.\r\n    * @param {Uint8Array} rom \r\n    * @param {number} headerOffset optional\r\n    * @returns {number}\r\n    */\r\n    getVersion: function (romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = defaultHeaderOffset;\r\n\r\n        return romImage[headerOffset + 0xE] & 0xF;\r\n    },\r\n\r\n        /**\r\n    * Gets the region code for the given ROM. See regionCodes.\r\n    * @param {Uint8Array} rom \r\n    * @param {number} headerOffset optional\r\n    * @returns {number}\r\n    */\r\n    getChecksum: function (romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = defaultHeaderOffset;\r\n\r\n        return romImage[headerOffset + 0xA] | (romImage[headerOffset + 0xB] << 8);\r\n    },\r\n\r\n    /** Array containing known region code names */\r\n    regionCodes: regionCodes,\r\n};\r\n\r\nexport default smsUtil;","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// @ts-check\r\n\r\nimport { parseAscii } from '../util';\r\nimport Rom from '../Rom';\r\n\r\nconst externalHeaderSize = 0x200;\r\nconst interleaveChunkSize = 0x4000;\r\nconst interleaveHalfChunkSize = 0x2000;\r\n\r\n/** strings found in ROMs used to identify layout */\r\nconst romIdentifiers = [\r\n    {\r\n        sega32X: false,\r\n        interleaved: false,\r\n        knownNames: [\"SEGA GENESIS\", \"SEGA MEGADRIVE\", \"SEGA MEGA DRIVE\"],\r\n        offset: 0x100,\r\n        headeredOffset: 0x200,\r\n    },\r\n    {\r\n        sega32X: true,\r\n        interleaved: false,\r\n        knownNames: [\"SEGA 32X\"],\r\n        offset: 0x100,\r\n        headeredOffset: 0x200,\r\n    },\r\n    {\r\n        sega32X: false,\r\n        interleaved: true,\r\n        knownNames: [\"SG EEI\", \"SG EARV\", \"SG EADIE\", \"EAGNSS\", \"EAMGDIE\", \"EAMG RV\"],\r\n        offset: 0x80,\r\n        headeredOffset: 0x280,\r\n    },\r\n    {\r\n        sega32X: true,\r\n        interleaved: true,\r\n        knownNames: [\"SG 2\", \"EA2\"],\r\n        offset: 0x80,\r\n        headeredOffset: 0x280,\r\n    },\r\n];\r\n\r\n\r\n/**\r\n * Gets ROM layout and platform (gen vs. 32x) information based on internal header.\r\n * @param {Uint8Array} romImage\r\n * @returns {{interleaved: boolean, internalHeader: boolean, externalHeader: boolean, sega32X: boolean}}\r\n */\r\nfunction getRomInfo(romImage) {\r\n    if (romImage.length >= 0x400) {\r\n\r\n        for (var i = 0; i < romIdentifiers.length; i++) {\r\n            var identifier = romIdentifiers[i];\r\n\r\n            // Check at locations for both with and without external header\r\n            var unheaderedText = parseAscii(romImage, identifier.offset, 0x10).replace('_', ' ').trim();\r\n            var headeredText = parseAscii(romImage, identifier.headeredOffset, 0x10).replace('_', ' ').trim();\r\n\r\n            for (var iKnownName = 0; iKnownName < identifier.knownNames.length; iKnownName++) {\r\n                var knownName = identifier.knownNames[iKnownName];\r\n\r\n                var unheaderedMatch = unheaderedText.startsWith(knownName);\r\n                var headeredMatch = headeredText.startsWith(knownName);\r\n\r\n                if (headeredMatch || unheaderedMatch) {\r\n                    return {\r\n                        interleaved: identifier.interleaved,\r\n                        sega32X: identifier.sega32X,\r\n                        internalHeader: true,\r\n                        externalHeader: headeredMatch\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        interleaved: false,\r\n        sega32X: false,\r\n        internalHeader: false,\r\n        externalHeader: false\r\n    };\r\n}\r\n\r\n// /**\r\n//  * Gets the ROM in BIN format (not interleaved or headered) if it is not already.\r\n//  * @param {Uint8Array} romImage \r\n//  * @returns {Uint8Array}\r\n//  */\r\n// function getBinFormat(romImage) {\r\n//     // If ROM is already in BIN format, or has already been converted, we don't need to convert\r\n//     if (romImage.binFormatted) return romImage.binFormatted;\r\n//     var {externalHeader, interleaved} = getRomInfo(romImage);\r\n//     if (!externalHeader && !interleaved) return romImage;\r\n\r\n//     var binRom;\r\n//     var readOffset = 0;\r\n//     var writeOffset = 0;\r\n\r\n//     // Create a buffer. Exclude header if necessary.\r\n//     if (externalHeader) {\r\n//         binRom = new Uint8Array(romImage.length - externalHeaderSize);\r\n//         readOffset = externalHeaderSize;\r\n//     } else {\r\n//         binRom = new Uint8Array(romImage.length);\r\n//     }\r\n\r\n//     while (readOffset + interleaveChunkSize <= romImage.length) {\r\n//         deinterleaveChunk(romImage, readOffset, binRom, writeOffset);\r\n//         readOffset += interleaveChunkSize;\r\n//         writeOffset += interleaveChunkSize;\r\n//     }\r\n\r\n//     // Cache the converted ROM\r\n//     romImage.binFormatted = binRom;\r\n//     return binRom;\r\n// }\r\n\r\n/**\r\n * \r\n * @param {Rom} rom\r\n */\r\nfunction convertRomToBin(rom) {\r\n    var { externalHeader, interleaved } = getRomInfo(rom.preview);\r\n    if (!externalHeader && !interleaved) return Promise.resolve(rom);\r\n    if (!interleaved) {\r\n        return Promise.resolve(rom.file.slice(\r\n            externalHeaderSize,\r\n            rom.file.size - externalHeaderSize\r\n        ));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n        var startOffset = externalHeader ? externalHeaderSize : 0;\r\n        var blobParts = [];\r\n        var deinterleaveBuffer = new Uint8Array(interleaveChunkSize);\r\n\r\n        var chunkReady = (/**@type {Uint8Array} */ bytes) => {\r\n            if (bytes.length === interleaveChunkSize) {\r\n                // De-interleave into a separate buffer\r\n                deinterleaveChunk(bytes, 0, deinterleaveBuffer, 0);\r\n                \r\n                // SOMEHOW THESE TWO ASSHOLES ARE GIVING ME DIFFERENT INCORRECT RESEULTS\r\n                blobParts.push(new Blob([deinterleaveBuffer]));\r\n                // blobParts.push(deinterleaveBuffer);\r\n\r\n            } else {\r\n                blobParts.push(new Blob([bytes]));\r\n            }\r\n        }; \r\n\r\n        var onDone = () => {\r\n            resolve(new Blob(blobParts));\r\n        };\r\n        rom.streamData(chunkReady, startOffset, interleaveChunkSize, null, true, onDone);\r\n    });\r\n}\r\n\r\n/**\r\n * \r\n * @param {Uint8Array} sourceRom \r\n * @param {number} sourceOffset \r\n * @param {Uint8Array} destRom \r\n * @param {number} destOffset \r\n */\r\nfunction deinterleaveChunk(sourceRom, sourceOffset, destRom, destOffset) {\r\n    var writeOffset = destOffset;\r\n    for (var readOffset = 0; readOffset < interleaveHalfChunkSize; readOffset++) {\r\n        // Read even byte from even block\r\n        destRom[writeOffset + 1] = sourceRom[sourceOffset + readOffset];\r\n        // Read odd byte from odd block\r\n        destRom[writeOffset] = sourceRom[sourceOffset + readOffset + interleaveHalfChunkSize];\r\n\r\n        writeOffset += 2;\r\n    }\r\n}\r\n\r\nvar genUtil = {\r\n\r\n    /** Gets ROM layout and platform (gen vs. 32x) information based on internal header. */\r\n    getRomInfo: getRomInfo,\r\n\r\n    convertRomToBin: convertRomToBin,\r\n\r\n    externalHeaderSize: externalHeaderSize,\r\n};\r\n\r\nexport default genUtil;","// @ts-check\r\n\r\n/**\r\n * Object containing NES-specific data and functions\r\n */\r\n\r\nimport smsUtil from '../romUtils/smsUtil';\r\nimport { toHex, HexValue } from '../util';\r\nimport RomRegion from '../RomRegion';\r\nimport Platform from './Platform';\r\nimport Rom from '../Rom';\r\nconst category = Platform.exDataCategories;\r\n\r\n// function yesNo(bool) {\r\n//     return bool ? \"yes\" : \"no\";\r\n// }\r\n\r\nclass Platform_gg_sms extends Platform {\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @param {string} longName \r\n     * @param {string[]} knownExts \r\n     * @param {number[]} regions \r\n     * @param {string} formatName\r\n     */\r\n    constructor(name, longName, knownExts, regions, formatName) {\r\n        super(name, longName, knownExts);\r\n\r\n        /** A list of regions used to identify this platform */\r\n        this.regions = regions;\r\n        /** Name of the file format this platform represents */\r\n        this.formatName = formatName;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch(rom) {\r\n        var headerOffset = smsUtil.getHeaderOffset(rom.size);\r\n        if(!headerOffset) return false;\r\n\r\n        if (!smsUtil.verifyMagicNumber(rom, headerOffset)) return false;\r\n        var region = smsUtil.getRegionCode(rom, headerOffset);\r\n        return this.regions.indexOf(region) >= 0;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader(rom) {\r\n        return false;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        var fileRegion = new RomRegion('file', rom, 0, rom.size);\r\n        var romRegion = new RomRegion('rom', rom, 0, rom.size);\r\n\r\n        return Promise.resolve([fileRegion, romRegion]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getExtendedData(rom) {\r\n        var result = [];\r\n\r\n        var romImage = rom.preview;\r\n        var headerOffset = smsUtil.getHeaderOffset(rom.size);\r\n        var headerValid = smsUtil.verifyMagicNumber(romImage, headerOffset);\r\n\r\n        return super.getExtendedData(rom)\r\n            .then(data => {\r\n                data.addHeader(\"Header found\", headerValid.toString());\r\n\r\n                if (headerValid) {\r\n                    //data.addHeader(\"Checksum\", toHex(smsUtil.getChecksum(romImage, headerOffset), 4));\r\n                    data.addHeader(\"Checksum\", HexValue.hex(smsUtil.getChecksum(romImage, headerOffset), 4));\r\n                    data.addHeader(\"Region\", smsUtil.regionCodes[smsUtil.getRegionCode(romImage, headerOffset)]);\r\n                    data.addHeader(\"Version\", smsUtil.getVersion(romImage, headerOffset).toString());\r\n                    data.addHeader(\"Product code\", smsUtil.getProductCode(romImage, headerOffset));\r\n                }\r\n                \r\n                return data; \r\n        })\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName(rom) {\r\n        return \"Master System ROM image\";\r\n    }\r\n}\r\n\r\nexport default Platform_gg_sms;","// @ts-check\r\n\r\n/** The sum of all the bytes making up the standard gameboy logo image in the GB header  */\r\nconst gbaLogoChecksum = 0x4927;\r\n/** Location of the GB logo within the ROM  */\r\nconst gbaLogoOffset = 0x04;\r\n/** Size of the GB logo image in bytes  */\r\nconst gbaLogoSize = 152;\r\n\r\n\r\nvar gbaUtil = {\r\n\r\n    /**\r\n     * Validates the logo bitmap in a GBA ROM\r\n     * @param {Uint8Array} romImage \r\n     * @param {number} [headerOffset] \r\n     * @returns {boolean}\r\n     */\r\n    verifyLogo: function verifyLogo(romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = 0;\r\n\r\n        if (romImage.length < headerOffset + gbaLogoOffset + gbaLogoSize)\r\n            return false;\r\n        \r\n        var sum = 0;\r\n        for (var i = 0; i < gbaLogoSize; i++) {\r\n            sum += romImage[gbaLogoOffset + i];\r\n        }\r\n\r\n        return (sum & 0xFFFF) === gbaLogoChecksum;\r\n    },\r\n\r\n    /**\r\n     * Calculates the checksum of the ROM's internal header\r\n     * @param {Uint8Array} romImage \r\n     * @param {number?} headerOffset optional\r\n     * @returns {number}\r\n     */\r\n    calculateHeaderChecksum: function calculateHeaderChecksum(romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = 0;\r\n\r\n        var firstByte = headerOffset + 0xA0;\r\n        var lastByte = headerOffset + 0xBC;\r\n\r\n        var sum = 0;\r\n        for (var i = firstByte; i <= lastByte; i++) {\r\n            sum -= romImage[i];\r\n        }\r\n\r\n        // Truncate\r\n        return (sum - 0x19) & 0xFF;\r\n    },\r\n\r\n};\r\n\r\n\r\nexport default gbaUtil;","// @ts-check\r\n\r\n/** Checksum of logo bitmap */\r\nconst gbLogoChecksum = 0x1546;\r\n/** Location of logo bitmap */\r\nconst gbLogoOffset = 0x0104;\r\n/** Size of logo bitmap in bytes */\r\nconst gbLogoSize = 0x30;\r\n/** Offset of a header within a ROM image */\r\nconst gbHeaderOffset = 0x100;\r\n\r\nvar gbUtil = {\r\n\r\n    /** Checksum of logo bitmap */\r\n    gbLogoChecksum: gbLogoChecksum,\r\n    /** Location of logo bitmap */\r\n    gbLogoOffset: gbLogoOffset,\r\n    /** Size of logo bitmap in bytes */\r\n    gbLogoSize: gbLogoSize,\r\n    /** Offset of a header within a ROM image */\r\n    gbHeaderOffset: gbHeaderOffset,\r\n\r\n\r\n    /**\r\n     * Returns a boolean indicating whether or not the specified ROM or header contains a valid logo bitmap\r\n     * @param {Uint8Array} romImage\r\n     * @param {number} [headerOffset] \r\n     * @returns {boolean}\r\n     */\r\n    verifyLogo: function (romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = gbHeaderOffset;\r\n\r\n        if (romImage.length < headerOffset + (gbLogoOffset - 0x100) + gbLogoSize) { \r\n            return false;\r\n        }\r\n\r\n        var sum = 0;\r\n        for (var i = 0; i < gbLogoSize; i++) {\r\n            sum += romImage[gbLogoOffset + i];\r\n        }\r\n\r\n        return sum == gbLogoChecksum;\r\n    },\r\n\r\n    /**\r\n     * Returns the checksum of the specified header\r\n     * @param {Uint8Array} romImage\r\n     * @param {number} headerOffset optional\r\n     * @returns {number}\r\n     */\r\n    calculateHeaderChecksum: function (romImage, headerOffset) {\r\n        if (headerOffset == null) headerOffset = gbHeaderOffset;\r\n\r\n        var firstByte = headerOffset + 0x34;\r\n        var lastByte = headerOffset + 0x4C;\r\n        var sum = 0;\r\n\r\n        for (var i = firstByte; i <= lastByte; i++) {\r\n            sum -= romImage[i] + 1;\r\n        }\r\n\r\n        return sum & 0xFF;\r\n    },\r\n\r\n    /**\r\n     * Calculates a ROM's checksum. This can be compared to the\r\n     * checksum found in the internal header to verify the header.\r\n     * @param {Uint8Array} romImage\r\n     * @returns {number}\r\n     */\r\n    calculateRomChecksum: function (romImage) {\r\n        var sum = 0;\r\n\r\n        for (var i = 0; i < romImage.length; i++) {\r\n            sum = 0xFFFFFF & (sum + romImage[i]);\r\n        }\r\n\r\n        if (romImage.length >= 0x0150) {\r\n            sum -= romImage[0x14e];\r\n            sum -= romImage[0x14f];\r\n        }\r\n\r\n        return sum & 0xFFFF;\r\n    },\r\n\r\n};\r\n\r\nexport default gbUtil;","// @ts-check\r\n\r\nvar snesUtil = {\r\n    /**\r\n     * Calculates the 16-bit checksum of the ROM\r\n     * @param {Uint8Array} romImage\r\n     * @returns {number}\r\n     */\r\n    calculateChecksum: function(romImage) {\r\n        // NOTE: I've found two SNES checksum algorithms, one of\r\n        // which mirrors data to a power-of-two size, and one of\r\n        // which mirrors data to a multiple of 4 MBits. Both failed\r\n        // some of the ROMs tested.\r\n        // \r\n        // Hello past self. This is future self. I've received yet a third explanation:\r\n        // The largest power of two that is less than or equal the size of the ROM is \r\n        // checksummed, then the remainder (if any) is mirrored to the next power of two\r\n        if (romImage.byteLength < 0x1000) return 0;\r\n\r\n        var size = snesUtil.getRomSize(romImage);\r\n        var mirroredSize = size.mirroredSize;\r\n        var unmirroredSize = size.unmirroredSize;\r\n        var baseOffset = snesUtil.hasExternalHeader(romImage) ? snesUtil.externalHeaderSize : 0;\r\n    \r\n        // ANDing the value of a number with -1 results in an integer truncated to 32 bits (signed)\r\n        var result = 0; // 32-bit signed int\r\n\r\n\r\n        // Sum unmirrored data\r\n        var endOfUnmirrored = baseOffset + unmirroredSize;\r\n        for (var iByte = baseOffset; iByte < endOfUnmirrored; iByte++) {\r\n            result = (result + romImage[iByte]) & -1;\r\n        }\r\n\r\n        if(mirroredSize == 0)\r\n            return result & 0xFFFF;\r\n\r\n        var startOfMirrored = baseOffset + unmirroredSize;\r\n        var endOfMirrored = startOfMirrored + mirroredSize;\r\n        var mirrorCount = unmirroredSize / mirroredSize;\r\n\r\n        // Sum mirrored data\r\n        for (var iMirror = 0; iMirror < mirrorCount; iMirror++) {\r\n            for (var iByte = startOfMirrored; iByte < endOfMirrored; iByte++) {\r\n                result = (result + romImage[iByte]) & -1;\r\n            }\r\n        }\r\n\r\n        return result & 0xFFFF;\r\n    },\r\n\r\n    /**\r\n     * Gets the size of mirrored and unmirrored data in the ROM.\r\n     * @param romImage {Uint8Array}\r\n     * @returns {{unmirroredSize: number, mirroredSize: number}}\r\n     */\r\n    getRomSize: function (romImage) {\r\n        var result = {};\r\n\r\n        var totalSize = romImage.byteLength;\r\n        if (snesUtil.hasExternalHeader(romImage)) totalSize -= snesUtil.externalHeaderSize;\r\n\r\n        result.unmirroredSize = 1024;\r\n\r\n        // We'll keep checking larger powers of two until we\r\n        // find one that is >= total ROM size\r\n        while (true) {\r\n            // Is the size exactly a power of 2? Then nothing is mirrored.\r\n            if (result.unmirroredSize == totalSize) {\r\n                result.mirroredSize = 0;\r\n                return result;\r\n            }\r\n\r\n            var nextSize = result.unmirroredSize  * 2;\r\n\r\n            // Size is not a power of two? Remainder is mirrored.\r\n            if (nextSize > totalSize) {\r\n                result.mirroredSize = totalSize - result.unmirroredSize;\r\n                return result;\r\n            }\r\n\r\n            result.unmirroredSize = nextSize;\r\n        }\r\n    },\r\n\r\n    // /**\r\n    //  * Returns the internal checksum. The result may be incorrect or NULL if the ROM is not\r\n    //  * large enough or HIROM/LOROM can't be detected.\r\n    //  * @param romImage {Uint8Array}\r\n    //  * @param {number} [size]\r\n    //  * @returns {number | null}\r\n    //  */\r\n    // getInternalChecksum: function (romImage, size) {\r\n    //     var romImageOffset = snesUtil.hasExternalHeader(romImage) ? snesUtil.externalHeaderSize : 0;\r\n\r\n    //     //if (offset + 1 >= rom.Length) return 0;\r\n    //     //return (ushort)(rom[offset] | (rom[offset + 1] << 8));\r\n    //     var mapping = snesUtil.checkHiromOrLorom(romImage, size);\r\n    //     //HiromOrLorom(romImage, romImageOffset, out lorom, out hirom);\r\n        \r\n    //     if (mapping.exhirom && (romImage.byteLength >= snesUtil.exhiromChecksumOffset + 1)) {\r\n    //         return (\r\n    //             romImage[romImageOffset + snesUtil.exhiromChecksumOffset] |\r\n    //             romImage[romImageOffset + snesUtil.exhiromChecksumOffset + 1] << 8\r\n    //         );\r\n    //     } else if (mapping.hirom && (romImage.byteLength >= snesUtil.hiromChecksumOffset + 1)) {\r\n    //         return (\r\n    //             romImage[romImageOffset + snesUtil.hiromChecksumOffset] |\r\n    //             romImage[romImageOffset + snesUtil.hiromChecksumOffset + 1] << 8\r\n    //         );\r\n    //     } else if (romImage.byteLength >= snesUtil.loromChecksumOffset + 1) {\r\n    //         return (\r\n    //             romImage[romImageOffset + snesUtil.loromChecksumOffset] |\r\n    //             romImage[romImageOffset + snesUtil.loromChecksumOffset + 1] << 8\r\n    //         );\r\n    //     }\r\n    //     return null;\r\n    // },\r\n\r\n    /**\r\n     * Identifies whether the ROM has an external ROM header (SMC, SWC, or Pro Fighter)\r\n     * @param romImage {Uint8Array}\r\n     * @returns {boolean}\r\n     */\r\n    hasExternalHeader: function (romSize) {\r\n        return (romSize % 1024) === snesUtil.externalHeaderSize;\r\n    },\r\n\r\n    /**\r\n     * Returns true if the ROM can be determined to have a valid SMC header\r\n     * @param {Uint8Array} romImage\r\n     * @returns boolean\r\n     */\r\n    hasGoodSmcHeader: function (romImage) {\r\n        if (!snesUtil.hasExternalHeader(romImage)) return false;\r\n\r\n        // Verify size specified\r\n        var size = romImage.byteLength - snesUtil.externalHeaderSize;\r\n        var smcSizeValue = romImage[0] | (romImage[1] << 8);\r\n        var smcSize = smcSizeValue * 8 * 1024; // Size is specified in units of 8kB\r\n\r\n        // Verify zero padding\r\n        if (romImage.byteLength != smcSize + snesUtil.externalHeaderSize) return false;\r\n        for (var i = 0; i < 509; i++) {\r\n            if (romImage[i + 3] != 0) return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns true if the ROM can be determined to have a valid SWC header\r\n     * @param {Uint8Array} romImage\r\n     * @returns boolean\r\n     */\r\n    hasGoodSwcHeader: function (romImage) {\r\n        if (!snesUtil.hasExternalHeader(romImage)) return false;\r\n\r\n        // Verify size specified\r\n        var size = romImage.byteLength - snesUtil.externalHeaderSize;\r\n        var smcSizeValue = romImage[0] | (romImage[1] << 8);\r\n        var smcSize = smcSizeValue * 8 * 1024; // Size is specified in units of 8kB\r\n\r\n        // Apparently, this is some sort of magic number\r\n        if (romImage[8] != 0xAA || romImage[9] != 0xBB || romImage[10] != 0x04) return false;\r\n\r\n        // Verify zero padding\r\n        if (romImage.byteLength != smcSize + snesUtil.externalHeaderSize) return false;\r\n        for (var i = 0; i < 501; i++) {\r\n            if (romImage[i + 11] != 0) return false;\r\n        }\r\n\r\n        return true;    },\r\n\r\n    /**\r\n     * Returns an object that indicates whether the ROM matches the heuristic\r\n     * for detecting HiROM, LoRom, both, or neither.\r\n     * @param {*} romImagePreview - An array containing at least the first 64 KB of the ROM\r\n     * @param {number} [size] - Optional. Used as a heuristic in determining ROM layout.\r\n     * @returns {{lorom: boolean, hirom: boolean, exhirom: boolean}}\r\n     */\r\n    checkHiromOrLorom: function (romImagePreview, size) {\r\n        var romImageOffset = snesUtil.hasExternalHeader(romImagePreview) ? snesUtil.externalHeaderSize : 0;\r\n\r\n        var result = { hirom: false, lorom: false, exhirom: false };\r\n\r\n        if (romImagePreview.byteLength < romImageOffset + 0x10000) {\r\n            return result;\r\n        }\r\n\r\n        var loromCheckum = getWord(romImagePreview, romImageOffset + snesUtil.loromChecksumOffset);\r\n        var loromComplement = getWord(romImagePreview, romImageOffset + snesUtil.loromChecksumCompOffset);\r\n\r\n        var hiromCheckum = getWord(romImagePreview, romImageOffset + snesUtil.hiromChecksumOffset);\r\n        var hiromComplement = getWord(romImagePreview, romImageOffset + snesUtil.hiromChecksumCompOffset);\r\n\r\n        var exhiromCheckum = getWord(romImagePreview, romImageOffset + snesUtil.exhiromChecksumOffset);\r\n        var exhiromComplement = getWord(romImagePreview, romImageOffset + snesUtil.exhiromChecksumCompOffset);\r\n\r\n        result.lorom =\r\n            ((loromCheckum.lo ^ loromComplement.lo) == 0xFF) &&\r\n            ((loromCheckum.hi ^ loromComplement.hi) == 0xFF);\r\n        result.hirom =\r\n            ((hiromCheckum.lo ^ hiromComplement.lo) == 0xFF) &&\r\n            ((hiromCheckum.hi ^ hiromComplement.hi) == 0xFF);\r\n        //result.exhirom = Math.max(romImagePreview.byteLength, (size || 0)) >= snesUtil.exhiromThreshold;\r\n        result.exhirom =\r\n            ((exhiromCheckum.lo ^ exhiromComplement.lo) == 0xFF) &&\r\n            ((exhiromCheckum.hi ^ exhiromComplement.hi) == 0xFF);\r\n        \r\n        return result;\r\n    },\r\n\r\n    externalHeaderSize: 512,\r\n    /// <summary>Location of checksum in a HIROM game</summary>\r\n    hiromChecksumOffset: 0xFFDE,\r\n    /// <summary>Location of checksum in a LOROM game</summary>\r\n    loromChecksumOffset: 0x7FDE,\r\n    /// <summary>Location of checksum in a EXHIROM game</summary>\r\n    exhiromChecksumOffset: 0x40FFDE,\r\n    /// <summary>Location of checksum complement in a HIROM game</summary>\r\n    hiromChecksumCompOffset: 0xFFDC,\r\n    /// <summary>Location of checksum complement in a LOROM game</summary>\r\n    loromChecksumCompOffset: 0x7FDC,\r\n    /// <summary>Location of checksum complement in a EXHIROM game</summary>\r\n    exhiromChecksumCompOffset: 0x40FFDC,\r\n    /// <summary>The minimum size of a ROM image that can be considered EXHIROM</summary>\r\n    exhiromThreshold: 0x400001,\r\n    \r\n};\r\n\r\n/**\r\n * Gets the 16-bit value as two byte values, low byte first\r\n * @param {Uint8Array} byteArray \r\n * @param {number} offset \r\n * @returns {{lo: number, hi: number}}\r\n */\r\nfunction getWord(byteArray, offset) {\r\n    return {\r\n        lo: byteArray[offset],\r\n        hi: byteArray[offset + 1]\r\n    };\r\n}\r\n\r\nexport default snesUtil;","/*\r\n    RomHasher\r\n\r\n    Orchestrates hashing operations, providing a mechanism to listen to\r\n    overall progress updates and cancel the overall operation.\r\n*/\r\n\r\nimport RomRegion from './RomRegion';\r\nimport * as hasher from './hash';\r\nimport Rom from './Rom';\r\n\r\nclass RomHasher {\r\n    /**\r\n     * @param {Blob | Uint8Array} romImage \r\n     * @param {RomRegion[]} regions\r\n     * @param {string[]} hashAlgos \r\n     * @param {function(number):void} [progressCallback]\r\n     */\r\n    constructor(romImage, regions, hashAlgos, progressCallback) {\r\n        this.hashRegions = regions;\r\n        this.hashAlgos = hashAlgos;\r\n\r\n        /** @type {{algoName: string, region: RomRegion, value: string}[]} */\r\n        this.hashlist = [];\r\n        \r\n        /** NO LONGER USED -- See hachTaskBuckets\r\n         *  @type {{algoName: string, region: RomRegion}[]} */\r\n        this.hashTasks = [];\r\n\r\n        /** List of hash tasks. Each item in the bucket represents a list of algorithms and a region of data to operate on\r\n         *  @type {{algoNames: string[], region: RomRegion}[]} */\r\n        this.hashTaskBuckets = [];\r\n\r\n        this._parseHashlist();\r\n        this._queueHashTasks();\r\n        this._cancel = false;\r\n        this._cancelList = [];\r\n        this._progressCallback = progressCallback;\r\n\r\n        this.cancel = this.cancel.bind(this);\r\n\r\n    }\r\n\r\n    /** Parses each hash into an algorithm name and RomRegion object. */\r\n    _parseHashlist() {\r\n        this.hashlist = this.hashAlgos.map(algo => {\r\n            if (typeof algo !== 'string') throw Error('Invalid value specified for hashAlgos');\r\n            var parts = algo.split('_');\r\n            if (parts.length != 2) throw Error('Invalid value specified for hashAlgos');\r\n\r\n            var [regionName, algoName] = parts;\r\n            var region = this.hashRegions.find(reg => reg.name == regionName);\r\n\r\n            return {\r\n                algoName: algoName,\r\n                region: region,\r\n                value: \"(none)\", // to be filled in when result is calculated\r\n            };\r\n        });\r\n    }\r\n\r\n    /** Creates a queue of tasks. */\r\n    _queueHashTasks() {\r\n        this.hashlist.forEach(item => {\r\n            // Avoid queueing identical tasks\r\n            var existingTask = this.hashTasks.find(task => task.region.isSameRegion(item.region) && task.algoName === item.algoName);\r\n            if (!existingTask) this.hashTasks.push({\r\n                region: item.region,\r\n                algoName: item.algoName,\r\n            });\r\n        });\r\n\r\n        var hashlist = this.hashlist.slice();\r\n        var hashBuckets = [];\r\n\r\n        // Split hash items into buckets where each item within a bucket differs only by algorithm\r\n        while (hashlist.length > 0) {\r\n            // We'll separate all hash items that have the same region as the first remaining item\r\n            var region = hashlist[0].region;\r\n            var predicate =\r\n                ( /** @type {{algoName: string, region: RomRegion, value: string}} */ item) =>\r\n                    region.isSameRegion(item.region);\r\n\r\n            var [bucket, remainder] = partition(hashlist, predicate);\r\n            // Separated items go into a bucket\r\n            hashBuckets.push(bucket);\r\n            console.log(bucket);\r\n            // Remaining items will be processed in same manner\r\n            hashlist = remainder;\r\n        }\r\n\r\n        // reduce separate items to single item with array of algorithms\r\n        this.hashTaskBuckets = hashBuckets.map(bucket => {\r\n            var algoList = bucket.map(hashItem => hashItem.algoName);\r\n            return {\r\n                algoNames: algoList,\r\n                region: bucket[0].region\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Initiates the hashing process. Returns a promise.\r\n     * @returns {Promise<{algoName: string, region: RomRegion, value: string}[]>}\r\n    */\r\n    performHashes() {\r\n        var progressList = [];\r\n\r\n        var startTime = 0;\r\n        if (performance && performance.now) startTime = performance.now();\r\n\r\n        // var hashPromises = this.hashTasks.map(task => {\r\n        //     /** @type {function(): Promise<string>} */\r\n        //     var algoFunc = hasher[task.algoName + 'Async'];\r\n        //     if (!algoFunc) return Promise.reject(\"Hash algorithm \" + task.algoName + \" is not available\");\r\n    \r\n        //     var rom = task.region.rom;\r\n        //     if (rom instanceof Rom) rom = rom.file;\r\n\r\n        //     // If the hash operation is cancelled, skip over any pending hashes\r\n        //     if (this._cancel) return Promise.resolve(null);\r\n        //     var progressEntryIndex = progressList.length;\r\n        //     progressList.push(0);\r\n        //     var progressCallback = (amt) => {\r\n        //         progressList[progressEntryIndex] = amt;\r\n        //         if (this._progressCallback) {\r\n        //             var totalProgress = progressList.reduce((a, v) => v + a, 0) / this.hashTasks.length;\r\n        //             this._progressCallback(totalProgress);\r\n        //         }\r\n        //     }\r\n\r\n        //     var hashPromise = algoFunc(rom, task.region.offset, task.region.length, progressCallback);\r\n        //     var hashDonePromise = hashPromise.then(hash => {\r\n        //         var matches = this.hashlist.filter(item => item.region.isSameRegion(task.region) && item.algoName === task.algoName);\r\n        //         if (matches.length === 0) console.warn(\"task to result error\");\r\n        //         matches.forEach(match => match.value = hash || match.value);\r\n        //     });\r\n            \r\n        //     // Keep references to the cancel function for each hash operation so we can abort\r\n        //     this._cancelList.push(hashPromise.cancel);\r\n        //     return hashDonePromise;\r\n        // });\r\n\r\n        var hashPromises = this.hashTaskBuckets.map(bucket => {\r\n            var rom = bucket.region.rom;\r\n            if (rom instanceof Rom) rom = rom.file;\r\n\r\n            // If the hash operation is cancelled, skip over any pending hashes\r\n            if (this._cancel) return Promise.resolve(null);\r\n            var progressListIndex = progressList.length;\r\n            progressList.push(0);\r\n            var progressCallback = (amt) => {\r\n                progressList[progressListIndex] = amt;\r\n                if (this._progressCallback) {\r\n                    var totalProgress = progressList.reduce((a, v) => v + a, 0) / progressList.length;\r\n                    this._progressCallback(totalProgress);\r\n                }\r\n            }\r\n\r\n            var hashPromise = hasher.hashMultiAsync(bucket.algoNames, rom, bucket.region.offset, bucket.region.length, progressCallback);\r\n            var hashDonePromise = hashPromise.then(hashResults => {\r\n                for (var i = 0; i < hashResults.length; i++) {\r\n                    var algoName = bucket.algoNames[i];\r\n                    var matches = this.hashlist.filter(item => item.region.isSameRegion(bucket.region) && item.algoName === algoName);\r\n                    if (matches.length === 0) console.warn(\"bucket to result error\");\r\n                    matches.forEach(match => {\r\n                        match.value = hashResults[i] || match.value;\r\n                        match.name = match.region.name + \"_\" + match.algoName;\r\n                    });\r\n                }\r\n            });\r\n            \r\n            // Keep references to the cancel function for each hash operation so we can abort\r\n            this._cancelList.push(hashPromise.cancel);\r\n            return hashDonePromise;\r\n        });\r\n\r\n        return Promise.all(hashPromises)\r\n            .then(() => {\r\n                if (performance && performance.now) {\r\n                    var endTime = performance.now();\r\n                    console.log(\"Hashing operation complete in \" + ((endTime - startTime) / 1000) + \"s\");\r\n                }\r\n\r\n\r\n                return this.hashlist;\r\n            });\r\n    }\r\n\r\n    cancel() {\r\n        // Don't start any more hashes\r\n        this._cancel = true;\r\n        // Abort any currently running hashes\r\n        this._cancelList.forEach(cancelFunc => cancelFunc());\r\n    }\r\n\r\n}\r\n\r\n/** Splits an array into a \"matched\" and \"non-matched\" array based on a predicate\r\n *  @param {T[]} array\r\n *  @param {function(T): boolean} predicate \r\n *  @returns {[T[], T[]]}\r\n *  @template T\r\n */\r\nfunction partition(array, predicate) {\r\n    var match = [];\r\n    var nonmatch = [];\r\n    array.forEach(item => {\r\n        if (predicate(item)) {\r\n            match.push(item);\r\n        } else {\r\n            nonmatch.push(item);\r\n        }\r\n    });\r\n\r\n    return [match, nonmatch];\r\n}\r\n\r\n\r\nexport default RomHasher;","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","/*\r\n    Implements ROM DB logic and can be swapped out as appropriate\r\n    depending on the environment, e.g. a site could support an AJAX\r\n    function that can directly return the title given a hash.\r\n\r\n*/\r\n\r\n//@ts-check\r\n\r\nimport axios from 'axios';\r\n\r\nvar dbs = {};\r\nvar dbNameValidator = /^[a-zA-Z0-9 ]*$/;\r\n\r\n/**\r\n * @typedef {Object} RomDB\r\n * @property {function(string): Promise<string>} getTitle\r\n */\r\n\r\n/** Returns a promise that resolves to a RomDB.\r\n *  Throws if the specified name is invalid or not found.\r\n *  @param {string} name Platform name\r\n *  @returns {Promise<RomDB>}\r\n */\r\nfunction getDB(name) {\r\n    var db = dbs[name];\r\n    if (db) return db;\r\n\r\n    if (!dbNameValidator.test(name)) return Promise.reject(Error('Invalid platform database name.'));\r\n\r\n    var dbPath = 'db/' + name + '.json';\r\n    // @ts-ignore\r\n    if (typeof window !== 'undefined' && window.hasherDbPath) dbPath = window.hasherDbPath + '/' + name + '.json';\r\n\r\n    return axios.get(dbPath)\r\n        .then(response => {\r\n            if (response.status == 200) {\r\n                db = response.data;\r\n                db.getTitle = getTitle;\r\n                return db;\r\n            } else {\r\n                return Promise.reject(new Error('Received a status of ' + response.status + ' requesting the database'));\r\n            }\r\n        });\r\n}\r\n\r\n\r\n/** Method on ROM DB. Returns a promise that\r\n * resolves to the title associated with the given ROM hash, or null if not found.\r\n * Does not reject.\r\n *  @param {*} sha1_hex\r\n *  @returns {Promise<string>}\r\n */\r\nfunction getTitle(sha1_hex) {\r\n    return Promise.resolve(this[sha1_hex.toUpperCase()] || null);\r\n}\r\n\r\n// module.exports = getDB;\r\nexport default getDB;","//@ts-check\r\n\r\n/**\r\n * Object containing NES-specific data and functions\r\n */\r\n\r\nimport RomRegion from '../RomRegion';\r\nimport Platform from './Platform';\r\nimport Rom from '../Rom';\r\nconst category = Platform.exDataCategories;\r\n\r\n\r\nclass UnknownPlatform extends Platform {\r\n    constructor() {\r\n        super(\"UNK\", \"Unknown Platform\", []);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch(rom) {\r\n        return false;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader(rom) {\r\n        return false;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        var fileRegion = new RomRegion('file', rom, 0,rom.size);\r\n        var romRegion = new RomRegion('rom', rom, 0, rom.size);\r\n\r\n        return Promise.resolve([fileRegion, romRegion]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getExtendedData(rom) {\r\n        return super.getExtendedData(rom);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName(rom) {\r\n        return 'Unknown file type';\r\n    }\r\n\r\n}\r\n\r\nexport default UnknownPlatform;","// @ts-check\r\n\r\nimport Platform from './Platform';\r\nimport Rom from '../Rom';\r\nimport RomRegion from '../RomRegion';\r\nconst category = Platform.exDataCategories;\r\n\r\nclass N64Platform extends Platform {\r\n    constructor() {\r\n        super(\"N64\", \"Nintendo 64\", ['n64', 'z64', 'v64']);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch(rom) {\r\n        // return IsByteswapped(rom.preview) !== null;\r\n        return getRomLayout(rom) != null;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getExtendedData(rom) {\r\n        // var byteSwapped = IsByteswapped(rom.preview);\r\n        \r\n        // var byteSwappedText;\r\n        // if (byteSwapped === true) byteSwappedText = \"Yes\";\r\n        // if (byteSwapped === false) byteSwappedText = \"No\";\r\n        // if (byteSwapped === null) byteSwappedText = \"Unknown\";\r\n\r\n        // return super.getExtendedData(rom)\r\n        //     .then(data => {\r\n        //         data.addRom(\"Byte swapped\", byteSwappedText);\r\n        //         return data;\r\n        //      });\r\n        return super.getExtendedData(rom);\r\n    }\r\n\r\n    getFormatName(rom) {\r\n        // var byteSwapped = IsByteswapped(rom.preview);\r\n        // if (byteSwapped === true) return \"N64 ROM image\";\r\n        // if (byteSwapped === false) return \"N64 ROM image (byte-swapped)\";\r\n        // if (byteSwapped === null) return \"N64 ROM image (byte-swapping unknown)\";\r\n        var layout = getRomLayout(rom);\r\n        if (layout) {\r\n            return romFormatNames[layout];\r\n        } else {\r\n            return \"N64 ROM image (layout unknown)\";\r\n        }\r\n    }\r\n\r\n    getHashRegions(rom) {\r\n        return this.getBinFormat(rom).then(binRom => {\r\n            return [\r\n                new RomRegion('file', rom, 0, rom.size),\r\n                new RomRegion('rom', binRom, 0, binRom.size)\r\n            ];\r\n        });\r\n    }\r\n\r\n    /** @param {Rom} rom \r\n    */\r\n    _convertToBin(rom) {\r\n        var layout = getRomLayout(rom);\r\n        if (layout === romLayout.bigEndian) return Promise.resolve(rom);\r\n\r\n        /** @type {function(Uint8Array, Uint8Array): void} */\r\n        var chunkConverter;\r\n\r\n        if (layout === romLayout.byteSwapped) chunkConverter = chunkToBin_byteswapped;\r\n        if (layout === romLayout.wordSwapped) chunkConverter = chunkToBin_wordswapped;\r\n        if (layout === romLayout.littleEndian) chunkConverter = chunkToBin_littleEndian;\r\n        // if (IsByteswapped(rom.preview) !== true) return Promise.resolve(rom);\r\n\r\n        var blobParts = [];\r\n\r\n        return new Promise((resolve, reject) => {\r\n            var doChunk = (/** @type {Uint8Array} */bytes) => {\r\n                // // Byte-swap in place\r\n                // var len = bytes.length - 1; // accounting for odd number of bytes\r\n                // for (var i = 0; i < len; i+= 2) {\r\n                //     var swap = bytes[i + 1];\r\n                //     bytes[i + 1] = bytes[i];\r\n                //     bytes[i] = swap;\r\n                // }\r\n                chunkConverter(bytes, bytes);\r\n\r\n                blobParts.push(new Blob([bytes]));\r\n            };\r\n\r\n            var done = () => {\r\n                resolve(new Blob(blobParts));\r\n            }\r\n\r\n            try{\r\n                rom.streamData(doChunk, 0, 0x1000, null, true, done);\r\n            } catch (err) {\r\n                reject(err);\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport default N64Platform;\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n/** First four bytes of a normal (big-endian) N64 ROM */\r\nconst n64Identifier = [0x80, 0x37, 0x12, 0x40];\r\n\r\n/** First four bytes of a byte-swapped N64 ROM */\r\nconst n64Identifier_Byteswapped = [0x37, 0x80, 0x40, 0x12];\r\n\r\n/** First four bytes of a word-swapped N64 ROM */\r\nconst n64Identifier_Wordswapped = [0x12, 0x40, 0x80, 0x37];\r\n\r\n/** First four bytes of a little-endian  N64 ROM */\r\nconst n64Identifier_LittleEndian = [0x40, 0x12, 0x37, 0x80];\r\n\r\n/** Enum listing known ROM layouts */\r\nvar romLayout = {\r\n    \"bigEndian\": \"bigEndian\",\r\n    \"littleEndian\": \"littleEndian\",\r\n    \"byteSwapped\": \"byteSwapped\",\r\n    \"wordSwapped\": \"wordSwapped\",\r\n};\r\n\r\n\r\n/** Key/value pairs mapping known ROM layouts to display-friendly format names */\r\nvar romFormatNames = {\r\n    \"bigEndian\": \"N64 ROM (big-endian)\",\r\n    \"littleEndian\": \"N64 ROM (little-endian)\",\r\n    \"byteSwapped\": \"N64 ROM (byte-swapped)\",\r\n    \"wordSwapped\": \"N64 ROM (word-swapped)\",\r\n}\r\n\r\n/**\r\n * Converts a chunk of byte-swapped ROM to big-endian ROM. Data\r\n * must be 64-bit aligned. Input and output arrays can be the same\r\n * array. Output array must have adequate memory allocated.\r\n * @param {Uint8Array} bytesIn \r\n * @param {Uint8Array} bytesOut\r\n */\r\nfunction chunkToBin_byteswapped(bytesIn, bytesOut) {\r\n    // Byte-swap in place\r\n    var len = bytesIn.length - 1; // accounting for odd number of bytes\r\n    for (var i = 0; i < len; i+= 2) {\r\n        var swap = bytesIn[i + 1];\r\n        bytesOut[i + 1] = bytesIn[i];\r\n        bytesOut[i] = swap;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Converts a chunk of word-swapped ROM to big-endian ROM. Data\r\n * must be 64-bit aligned. Input and output arrays can be the same\r\n * array. Output array must have adequate memory allocated.\r\n * @param {Uint8Array} bytesIn \r\n * @param {Uint8Array} bytesOut\r\n */\r\nfunction chunkToBin_wordswapped(bytesIn, bytesOut) {\r\n    // Byte-swap in place\r\n    var len = bytesIn.length - 3; // accounting for odd number of bytes\r\n    for (var i = 0; i < len; i+= 4) {\r\n        var swap = bytesIn[i + 2];\r\n        bytesOut[i + 2] = bytesIn[i];\r\n        bytesOut[i] = swap;\r\n\r\n        swap = bytesIn[i + 3];\r\n        bytesOut[i + 3] = bytesIn[i + 1];\r\n        bytesOut[i + 1] = swap;\r\n    }\r\n}\r\n\r\n/**\r\n * Converts a chunk of little-endian ROM to big-endian ROM. Data\r\n * must be 64-bit aligned. Input and output arrays can be the same\r\n * array. Output array must have adequate memory allocated.\r\n * @param {Uint8Array} bytesIn \r\n * @param {Uint8Array} bytesOut\r\n */\r\nfunction chunkToBin_littleEndian(bytesIn, bytesOut) {\r\n    // Byte-swap in place\r\n    var len = bytesIn.length - 3; // accounting for odd number of bytes\r\n    for (var i = 0; i < len; i+= 4) {\r\n        var swap = bytesIn[i + 3];\r\n        bytesOut[i + 3] = bytesIn[i];\r\n        bytesOut[i] = swap;\r\n\r\n        swap = bytesIn[i + 2];\r\n        bytesOut[i + 2] = bytesIn[i + 1];\r\n        bytesOut[i + 1] = swap;\r\n    }\r\n}\r\n/**\r\n * Returns a boolean indicating whether the ROM is byteswapped, or null\r\n * if the ROM can not be determined to be an N64 ROM.\r\n * @param {Uint8Array} rom \r\n * @returns {boolean} A boolean or null.\r\n */\r\nfunction IsByteswapped(rom) {\r\n    if (rom.length < 4) return null;\r\n\r\n    var match = true;\r\n    for (var i = 0; i < n64Identifier.length; i++) {\r\n        if (n64Identifier[i] !== rom[i]) match = false;\r\n    }\r\n\r\n    if (match) return false;\r\n\r\n    var match = true;\r\n    for (var i = 0; i < n64Identifier_Byteswapped.length; i++) {\r\n        if (n64Identifier_Byteswapped[i] !== rom[i]) match = false;\r\n    }\r\n\r\n    if (match) return true;\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n *  Returns a string value representing the ROM layout, or null if layout can't be determined.\r\n *  See romLayout.\r\n *  @param {Rom} rom \r\n */\r\nfunction getRomLayout(rom) {\r\n    var data = rom.preview;\r\n\r\n    if (equalsAt(data, n64Identifier, 0)) return romLayout.bigEndian;\r\n    if (equalsAt(data, n64Identifier_Byteswapped, 0)) return romLayout.byteSwapped;\r\n    if (equalsAt(data, n64Identifier_Wordswapped, 0)) return romLayout.wordSwapped;\r\n    if (equalsAt(data, n64Identifier_LittleEndian, 0)) return romLayout.n64Identifier_LittleEndian;\r\n    return null;\r\n}\r\n\r\n/**\r\n * \r\n * @param {ArrayLike<number>} data \r\n * @param {ArrayLike<number>} comparison \r\n * @param {number} dataOffset \r\n */\r\nfunction equalsAt(data, comparison, dataOffset) {\r\n    if (data.length < dataOffset + comparison.length) return false;\r\n\r\n    for (var i = 0; i < comparison.length; i++) {\r\n        if (data[i + dataOffset] != comparison[i]) return false;\r\n    }\r\n\r\n    return true;\r\n}","/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_MD5_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [128, 32768, 8388608, -2147483648];\n  var SHIFT = [0, 8, 16, 24];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  var blocks = [], buffer8;\n  if (ARRAY_BUFFER) {\n    var buffer = new ArrayBuffer(68);\n    buffer8 = new Uint8Array(buffer);\n    blocks = new Uint32Array(buffer);\n  }\n\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  /**\n   * @method hex\n   * @memberof md5\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hex('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method digest\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.digest('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.array('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.base64('The quick brown fox jumps over the lazy dog');\n   */\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Md5(true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5\n   * @description Create Md5 object\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.create();\n   */\n  /**\n   * @method update\n   * @memberof md5\n   * @description Create and update Md5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.create();\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Md5();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw ERROR;\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  /**\n   * Md5 class\n   * @class Md5\n   * @description This is internal class.\n   * @see {@link md5.create}\n   */\n  function Md5(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n      this.buffer8 = buffer8;\n    } else {\n      if (ARRAY_BUFFER) {\n        var buffer = new ArrayBuffer(68);\n        this.buffer8 = new Uint8Array(buffer);\n        this.blocks = new Uint32Array(buffer);\n      } else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      }\n    }\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  /**\n   * @method update\n   * @memberof Md5\n   * @instance\n   * @description Update hash\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @see {@link md5.update}\n   */\n  Md5.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw ERROR;\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw ERROR;\n          }\n        }\n      } else {\n        throw ERROR;\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    var buffer8 = this.buffer8;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = blocks[16];\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            buffer8[i++] = message[index];\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              buffer8[i++] = code;\n            } else if (code < 0x800) {\n              buffer8[i++] = 0xc0 | (code >> 6);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else if (code < 0xd800 || code >= 0xe000) {\n              buffer8[i++] = 0xe0 | (code >> 12);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              buffer8[i++] = 0xf0 | (code >> 18);\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            }\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Md5.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = blocks[16];\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.bytes << 3;\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\n    this.hash();\n  };\n\n  Md5.prototype.hash = function () {\n    var a, b, c, d, bc, da, blocks = this.blocks;\n\n    if (this.first) {\n      a = blocks[0] - 680876937;\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\n      b = (b << 22 | b >>> 10) + c << 0;\n    } else {\n      a = this.h0;\n      b = this.h1;\n      c = this.h2;\n      d = this.h3;\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\n      a = (a << 7 | a >>> 25) + b << 0;\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\n      b = (b << 22 | b >>> 10) + c << 0;\n    }\n\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\n    b = (b << 20 | b >>> 12) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[5] - 378558;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[8] - 2022574463;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[11] + 1839030562;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[14] - 35309556;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[1] - 1530992060;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[4] + 1272893353;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[7] - 155497632;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[10] - 1094730640;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[13] + 681279174;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[0] - 358537222;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[3] - 722521979;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[6] + 76029189;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[9] - 640364487;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[12] - 421815835;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[15] + 530742520;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[2] - 995338651;\n    b = (b << 23 | b >>> 9) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\n    b = (b << 21 | b >>> 11) + c << 0;\n\n    if (this.first) {\n      this.h0 = a + 1732584193 << 0;\n      this.h1 = b - 271733879 << 0;\n      this.h2 = c - 1732584194 << 0;\n      this.h3 = d + 271733878 << 0;\n      this.first = false;\n    } else {\n      this.h0 = this.h0 + a << 0;\n      this.h1 = this.h1 + b << 0;\n      this.h2 = this.h2 + c << 0;\n      this.h3 = this.h3 + d << 0;\n    }\n  };\n\n  /**\n   * @method hex\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.hex();\n   */\n  Md5.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\n  };\n\n  /**\n   * @method toString\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.toString();\n   */\n  Md5.prototype.toString = Md5.prototype.hex;\n\n  /**\n   * @method digest\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.digest}\n   * @example\n   * hash.digest();\n   */\n  Md5.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n    return [\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\n    ];\n  };\n\n  /**\n   * @method array\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.array}\n   * @example\n   * hash.array();\n   */\n  Md5.prototype.array = Md5.prototype.digest;\n\n  /**\n   * @method arrayBuffer\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.arrayBuffer}\n   * @example\n   * hash.arrayBuffer();\n   */\n  Md5.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(16);\n    var blocks = new Uint32Array(buffer);\n    blocks[0] = this.h0;\n    blocks[1] = this.h1;\n    blocks[2] = this.h2;\n    blocks[3] = this.h3;\n    return buffer;\n  };\n\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.buffer}\n   * @example\n   * hash.buffer();\n   */\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\n\n  /**\n   * @method base64\n   * @memberof Md5\n   * @instance\n   * @description Output hash as base64 string\n   * @returns {String} base64 string\n   * @see {@link md5.base64}\n   * @example\n   * hash.base64();\n   */\n  Md5.prototype.base64 = function () {\n    var v1, v2, v3, base64Str = '', bytes = this.array();\n    for (var i = 0; i < 15;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\n        BASE64_ENCODE_CHAR[v3 & 63];\n    }\n    v1 = bytes[i];\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\n      '==';\n    return base64Str;\n  };\n\n  var exports = createMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    /**\n     * @method md5\b\n     * @description Md5 hash function, export to global in browsers.\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n     * @returns {String} md5 hashes\n     * @example\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\n     *\n     * // It also supports UTF-8 encoding\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\n     *\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\n     */\n    root.md5 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function() {\n  'use strict';\n\n  var root = typeof window === 'object' ? window : {};\n  var NODE_JS = !root.JS_SHA1_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  }\n  var COMMON_JS = !root.JS_SHA1_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Sha1(true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Sha1();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('sha1').update(message, 'utf8').digest('hex');\n      } else if (message.constructor === ArrayBuffer) {\n        message = new Uint8Array(message);\n      } else if (message.length === undefined) {\n        return method(message);\n      }\n      return crypto.createHash('sha1').update(new Buffer(message)).digest('hex');\n    };\n    return nodeMethod;\n  };\n\n  function Sha1(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    this.h0 = 0x67452301;\n    this.h1 = 0xEFCDAB89;\n    this.h2 = 0x98BADCFE;\n    this.h3 = 0x10325476;\n    this.h4 = 0xC3D2E1F0;\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  Sha1.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString = typeof(message) !== 'string';\n    if (notString && message.constructor === root.ArrayBuffer) {\n      message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if(notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha1.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n\n    for(j = 16; j < 80; ++j) {\n      t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n      blocks[j] =  (t << 1) | (t >>> 31);\n    }\n\n    for(j = 0; j < 20; j += 5) {\n      f = (b & c) | ((~b) & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1518500249 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | ((~a) & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1518500249 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | ((~e) & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1518500249 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | ((~d) & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1518500249 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | ((~c) & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1518500249 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 40; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1859775393 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1859775393 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1859775393 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1859775393 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1859775393 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 60; j += 5) {\n      f = (b & c) | (b & d) | (c & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 1894007588 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | (a & c) | (b & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 1894007588 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | (e & b) | (a & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 1894007588 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | (d & a) | (e & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 1894007588 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | (c & e) | (d & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 1894007588 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 80; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 899497514 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 899497514 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 899497514 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 899497514 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 899497514 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n  };\n\n  Sha1.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n           HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n           HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n           HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n           HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n           HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n           HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n           HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n           HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n           HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n           HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n           HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n           HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n           HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n           HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n           HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n           HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n           HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n           HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n           HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F];\n  };\n\n  Sha1.prototype.toString = Sha1.prototype.hex;\n\n  Sha1.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF\n    ];\n  };\n\n  Sha1.prototype.array = Sha1.prototype.digest;\n\n  Sha1.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n  };\n\n  var exports = createMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha1 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","/*\r\n    CRC32 hashing utility.\r\n\r\n    Provides both a simple hash function and a hasher object\r\n*/\r\n\r\n// @ts-check\r\n\r\nconst poly32 = new Uint32Array([\r\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\r\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\r\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\r\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\r\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\r\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\r\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\r\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\r\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\r\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\r\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\r\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\r\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\r\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\r\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\r\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\r\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\r\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\r\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\r\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\r\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\r\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\r\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\r\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\r\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\r\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\r\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\r\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\r\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\r\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\r\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\r\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\r\n]);\r\n\r\nfunction crc32(buffer, previous) {\r\n    var result = 0xFFFFFFFF;\r\n    if (typeof previous == 'number') result = previous ^ 0xFFFFFFFF;\r\n\r\n    for (var i = 0; i < buffer.length; i++) {\r\n        const byte = buffer[i];\r\n        result = (result >>> 8) ^ poly32[(result ^ byte) & 0xff];\r\n    }\r\n\r\n    return result ^ 0xFFFFFFFF;\r\n};\r\n\r\n\r\n\r\n/** Implements Hasher interface for CRC16 */\r\ncrc32.create = function() {\r\n    return new Crc32HasherObject();\r\n}\r\n\r\n/** Implements HasherObject interface for CRC16 */\r\nclass Crc32HasherObject {\r\n    constructor() {\r\n        this.currentValue = null;\r\n    }\r\n\r\n    update(data) {\r\n        this.currentValue = crc32(data, this.currentValue);\r\n    };\r\n\r\n    hex() {\r\n        if (this.currentValue < 0) {\r\n            return (this.currentValue + 0x100000000).toString(16);\r\n        } else {\r\n            return (this.currentValue || 0xFFFFFFFF).toString(16);\r\n        }\r\n    }\r\n}\r\n\r\nexport default crc32;","/*\r\n    CRC16 hashing utility.\r\n\r\n    Provides both a simple hash function and a Hasher object.\r\n\r\n */\r\n\r\n// @ts-check\r\n\r\nconst poly16 = new Uint16Array([\r\n    0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf, 0x8c48, 0x9dc1, 0xaf5a, 0xbed3, 0xca6c, 0xdbe5, 0xe97e, 0xf8f7,\r\n    0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e, 0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876,\r\n    0x2102, 0x308b, 0x0210, 0x1399, 0x6726, 0x76af, 0x4434, 0x55bd, 0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,\r\n    0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c, 0xbdcb, 0xac42, 0x9ed9, 0x8f50, 0xfbef, 0xea66, 0xd8fd, 0xc974,\r\n    0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb, 0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3,\r\n    0x5285, 0x430c, 0x7197, 0x601e, 0x14a1, 0x0528, 0x37b3, 0x263a, 0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,\r\n    0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9, 0xef4e, 0xfec7, 0xcc5c, 0xddd5, 0xa96a, 0xb8e3, 0x8a78, 0x9bf1,\r\n    0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738, 0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70,\r\n    0x8408, 0x9581, 0xa71a, 0xb693, 0xc22c, 0xd3a5, 0xe13e, 0xf0b7, 0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,\r\n    0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036, 0x18c1, 0x0948, 0x3bd3, 0x2a5a, 0x5ee5, 0x4f6c, 0x7df7, 0x6c7e,\r\n    0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5, 0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd,\r\n    0xb58b, 0xa402, 0x9699, 0x8710, 0xf3af, 0xe226, 0xd0bd, 0xc134, 0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,\r\n    0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3, 0x4a44, 0x5bcd, 0x6956, 0x78df, 0x0c60, 0x1de9, 0x2f72, 0x3efb,\r\n    0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232, 0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a,\r\n    0xe70e, 0xf687, 0xc41c, 0xd595, 0xa12a, 0xb0a3, 0x8238, 0x93b1, 0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,\r\n    0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330, 0x7bc7, 0x6a4e, 0x58d5, 0x495c, 0x3de3, 0x2c6a, 0x1ef1, 0x0f78,\r\n]);\r\n\r\n/** Calculate CRC-16 for the specified data\r\n * @param {Uint8Array} buffer\r\n * @param {number} [previous]\r\n */\r\nfunction crc16(buffer, previous) {\r\n    var result = 0xffff;\r\n    if (typeof previous == 'number') result = previous;\r\n\r\n    for (var i = 0; i < buffer.length; i++) {\r\n        const byte = buffer[i];\r\n        result = ((result >>> 8) & 0xff) ^ poly16[(result ^ byte) & 0xff];\r\n    }\r\n\r\n    return ~result & 0xffff;\r\n}\r\n\r\n/** Implements Hasher interface for CRC16 */\r\ncrc16.create = function() {\r\n    return new Crc16HasherObject();\r\n}\r\n\r\n/** Implements HasherObject interface for CRC16 */\r\nclass Crc16HasherObject {\r\n    constructor() {\r\n        this.currentValue = null;\r\n    }\r\n\r\n    update(data) {\r\n        this.currentValue = crc16(data, this.currentValue);\r\n    };\r\n\r\n    hex() {\r\n        return (this.currentValue || 0xFFFF).toString(16);\r\n    }\r\n}\r\n\r\nexport default crc16;","/*\r\n    Defines the Hasher and HasherObject interfaces\r\n\r\n    This exists purely for //@ts-check\r\n*/\r\n\r\n// @ts-check\r\n\r\n/**\r\n * @typedef {Object} Hasher\r\n * @property {function(): HasherObject} create\r\n */\r\n\r\n /**\r\n  * @typedef {Object} HasherObject\r\n  * @property {function(Uint8Array | ArrayBuffer | string | any[]): void} update\r\n  * @property {function(): string} hex\r\n  */\r\n\r\n\r\nexport default null;","// @ts-check\r\n\r\n/**\r\n * Object containing Neo-Geo-Pocket-specific data and functions\r\n */\r\n\r\nimport { crc16 } from '../hash';\r\nimport RomRegion from '../RomRegion';\r\nimport Platform from './Platform';\r\nimport Rom from '../Rom';\r\nconst category = Platform.exDataCategories;\r\n\r\n// function yesNo(bool) {\r\n//     return bool ? \"yes\" : \"no\";\r\n    \r\n// }\r\n\r\nconst headerCrcRegionSize = 0x15E;\r\n\r\nclass NdsPlatform extends Platform {\r\n    constructor() {\r\n        super('NDS', \"Nintendo DS\", ['nds']);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch(rom) {\r\n        //15Eh    2     Header Checksum, CRC-16 of [000h-15Dh]\r\n        if (rom.size < 0x200) return false;\r\n\r\n        var bytesToHash = rom.preview.subarray(0, headerCrcRegionSize);\r\n\r\n        var hash = crc16(bytesToHash);\r\n        return ((hash & 0xFF) === rom.preview[0x15e] && (hash >> 8) === rom.preview[0x15F]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader(rom) {\r\n        return false;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        return Promise.resolve([\r\n            new RomRegion('file', rom, 0, rom.size),\r\n            new RomRegion('rom', rom, 0, rom.size),\r\n        ]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName(rom) {\r\n        return \"Nintendo DS ROM\";\r\n    }\r\n}\r\n\r\n// export default ndsPlatform;\r\nexport default NdsPlatform;","// @ts-check\r\n\r\n/**\r\n * Object containing Neo-Geo-Pocket-specific data and functions\r\n */\r\n\r\nimport RomRegion from '../RomRegion';\r\nimport Platform from './Platform';\r\nconst category = Platform.exDataCategories;\r\nimport Rom from '../Rom';\r\n\r\n/** Value that identifies first-party ROMs */\r\nvar NgpCopyright = [0x43, 0x4F, 0x50, 0x59, 0x52, 0x49, 0x47, 0x48, 0x54, 0x20, 0x42, 0x59, 0x20, 0x53, 0x4E, 0x4B];\r\n/** Value that identifies third-party ROMs */\r\nvar NgpLicense = [0x20, 0x4C, 0x49, 0x43, 0x45, 0x4E, 0x53, 0x45, 0x44, 0x20, 0x42, 0x59, 0x20, 0x53, 0x4E, 0x4B];\r\n// function yesNo(bool) {\r\n//     return bool ? \"yes\" : \"no\";\r\n// }\r\n\r\n/** Compares two sets of bytes for equality\r\n * @param {number[] | ArrayBufferView} bytesA \r\n * @param {number} offsetA \r\n * @param {number[] | ArrayBufferView} bytesB \r\n * @param {number} offsetB \r\n * @param {number} length \r\n */\r\nfunction compareBytes(bytesA, offsetA, bytesB, offsetB, length) {\r\n    for (var i = 0; i < length; i++) {\r\n        if (bytesA[offsetA + i] != bytesB[offsetB + i]) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nclass NgpPlatform extends Platform{\r\n    constructor() {\r\n        super('NGP', \"Neo Geo Pocket\", ['ngp', 'ngc']);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch(rom) {\r\n        if (rom.size < 0x10) return false;\r\n\r\n        return (\r\n            compareBytes(rom.preview, 0, NgpCopyright, 0, NgpCopyright.length) ||\r\n            compareBytes(rom.preview, 0, NgpLicense, 0, NgpLicense.length)\r\n        );\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader(rom) {\r\n        return false;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        var fileRegion = new RomRegion('file', rom, 0,rom.size);\r\n        var romRegion = new RomRegion('rom', rom, 0,rom.size);\r\n\r\n        return Promise.resolve([fileRegion, romRegion]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName(rom) {\r\n        return \"Neo Geo Pocket ROM image\";\r\n    }\r\n}\r\n\r\nexport default NgpPlatform;","// @ts-check\r\n\r\nimport genUtil from './genUtil';\r\nimport { parseAscii } from '../util';\r\n\r\nvar ioCodes = {\r\n    \"J\": \"Joypad\",\r\n    \"6\": \"6-button Joypad\",\r\n    \"K\": \"Keyboard\",\r\n    \"P\": \"Printer\",\r\n    \"B\": \"Control Ball\",\r\n    \"F\": \"Floppy Disk Drive\",\r\n    \"L\": \"Activator\",\r\n    \"4\": \"Team Play\",\r\n    \"0\": \"Joystick for MS\",\r\n    \"R\": \"Serial RS232C\",\r\n    \"T\": \"Tablet\",\r\n    \"V\": \"Paddle Controller\",\r\n    \"C\": \"CD-ROM\",\r\n    \"M\": \"Mega Mouse\",\r\n};\r\n\r\n/** @type {string[]} */\r\nvar companyCodes = []; {\r\n    companyCodes[10] = \"Takara\";\r\n    companyCodes[11] = \"Taito or Accolade\";\r\n    companyCodes[12] = \"Capcom\";\r\n    companyCodes[13] = \"Data East\";\r\n    companyCodes[14] = \"Namco or Tengen\";\r\n    companyCodes[15] = \"Sunsoft\";\r\n    companyCodes[16] = \"Bandai\";\r\n    companyCodes[17] = \"Dempa\";\r\n    companyCodes[18] = \"Technosoft\";\r\n    companyCodes[19] = \"Technosoft\";\r\n    companyCodes[20] = \"Asmik\";\r\n    companyCodes[22] = \"Micronet\";\r\n    companyCodes[22] = \"Micronet & Bignet U.S.A.\";\r\n    companyCodes[23] = \"Vic Tokai\";\r\n    companyCodes[24] = \"American Sammy\";\r\n    companyCodes[25] = \"NCS\";\r\n    companyCodes[29] = \"Kyugo\";\r\n    companyCodes[32] = \"Wolfteam\";\r\n    companyCodes[33] = \"Kaneko\";\r\n    companyCodes[35] = \"Toaplan\";\r\n    companyCodes[36] = \"Tecmo\";\r\n    companyCodes[40] = \"Toaplan\";\r\n    companyCodes[42] = \"UFL Company Limited\";\r\n    companyCodes[43] = \"Human\";\r\n    companyCodes[45] = \"Game Arts\";\r\n    companyCodes[47] = \"Sage's Creation\";\r\n    companyCodes[48] = \"Tengen/Time Warner Interactive\";\r\n    companyCodes[49] = \"Renovation/Telenet\";\r\n    companyCodes[50] = \"Eletronic Arts\";\r\n    companyCodes[56] = \"Razorsoft\";\r\n    companyCodes[58] = \"Mentrix\";\r\n    companyCodes[60] = \"Victor Musical Industries\";\r\n    companyCodes[58] = \"Mentrix\";\r\n    companyCodes[69] = \"Arena/Mirrorsoft\";\r\n    companyCodes[70] = \"Virgin\";\r\n    companyCodes[73] = \"Soft Vision\";\r\n    companyCodes[74] = \"Palsoft\";\r\n    companyCodes[76] = \"Koei\";\r\n    companyCodes[79] = \"U.S. Gold\";\r\n    companyCodes[81] = \"Acclaim/Flying Edge\";\r\n    companyCodes[83] = \"Gametek\";\r\n    companyCodes[86] = \"Absolute\";\r\n    companyCodes[87] = \"Mindscape\";\r\n    companyCodes[88] = \"Domark\";\r\n    companyCodes[89] = \"Tonka\";\r\n    companyCodes[93] = \"Sony\";\r\n    companyCodes[95] = \"Konami\";\r\n    companyCodes[97] = \"Tradewest\";\r\n    companyCodes[100] = \"T*HQ Software\";\r\n    companyCodes[101] = \"TecMagik\";\r\n    companyCodes[103] = \"Takara\";\r\n    companyCodes[104] = \"MicroProse\";\r\n    companyCodes[106] = \"Electronic Arts Victor\";\r\n    companyCodes[112] = \"Designer Software\";\r\n    companyCodes[113] = \"Psygnosis\";\r\n    companyCodes[115] = \"Core Design\";\r\n    companyCodes[119] = \"Accolade\";\r\n    companyCodes[120] = \"Code Masters\";\r\n    companyCodes[125] = \"Interplay\";\r\n    companyCodes[130] = \"Activision\";\r\n    companyCodes[132] = \"Shiny & Playmates\";\r\n    companyCodes[133] = \"Bandai\";\r\n    companyCodes[139] = \"Viacom International\";\r\n    companyCodes[144] = \"Atlus\";\r\n    companyCodes[151] = \"Infogrames\";\r\n    companyCodes[161] = \"Fox Interactive\";\r\n    companyCodes[164] = \"Ocean\";\r\n    companyCodes[172] = \"Electronic Arts\";\r\n    companyCodes[177] = \"Ubisoft\";\r\n    companyCodes[239] = \"Disney Interactive\";\r\n}\r\n\r\nvar companyAltCodes = {\r\n    \"ACLD\": \"Ballistic\",\r\n    \"ASCI\": \"Asciiware\",\r\n    \"RSI\": \"Razorsoft\",\r\n    \"TREC\": \"Treco\",\r\n    \"VRGN\": \"Virgin Games\",\r\n    \"WSTN\": \"Westone\",\r\n}\r\n\r\n/**\r\n * Reads an ascii string (trimmed) from the ROM\r\n * @param {Uint8Array} rom \r\n * @param {number} offset \r\n * @param {number} length \r\n * @returns {string}\r\n */\r\nfunction readString(rom, offset, length) {\r\n    var str = parseAscii(rom, offset, length, true);\r\n    return str.replace('\\0', ' ').trim();\r\n}\r\n\r\n/**\r\n * Returns a 32-bit unisgned int read from a ROM\r\n * @param {Uint8Array} rom \r\n * @param {number} offset \r\n * @returns {number}\r\n */\r\nfunction readUint32(rom, offset) {\r\n    return rom[offset] << 24 | rom[offset + 1] << 16 | rom[offset + 2] << 8 | rom[offset + 3];\r\n}\r\n\r\n\r\n/**\r\n * Returns a 16-bit unisgned int read from a ROM\r\n * @param {Uint8Array} rom \r\n * @param {number} offset \r\n * @returns {number}\r\n */\r\nfunction readUint16(rom, offset) {\r\n    return rom[offset] << 8 | rom[offset + 1];\r\n\r\n}\r\n\r\n/**\r\n * Parses the internal header of a Genesis ROM\r\n * @param {Uint8Array} romImage\r\n * @constructor \r\n */\r\nfunction GenHeader(romImage) {\r\n    if (romImage.length < 0x200) throw Error('ROM too small to parse header');\r\n    /** Game platform */\r\n    this.platform = readString(romImage, 0x100, 0x10);\r\n    /** Copyright notice */\r\n    this.copyright = readString(romImage, 0x110, 0x10);\r\n    /** Game title */\r\n    this.gameName = readString(romImage, 0x120, 0x30);\r\n    /** Alternate game title */\r\n    this.altName = readString(romImage, 0x120, 0x30);\r\n    /** Product ID */\r\n    this.productID = readString(romImage, 0x180, 0xE);\r\n    /** IO Support codes */\r\n    this.ioSupport = readString(romImage, 0x190, 0x10);\r\n    /** Modem string */\r\n    this.modem = readString(romImage, 0x1bc, 0xc);\r\n    /** Memo */\r\n    this.memo = readString(romImage, 0x1C8, 0x28);\r\n    /** Game region */\r\n    this.region = readString(romImage, 0x1f0, 0x10);\r\n\r\n    /** ROM start address */\r\n    this.romStart = readUint32(romImage, 0x1a0);\r\n    /** ROM end address */\r\n    this.romEnd = readUint32(romImage, 0x1a4);\r\n    /** RAM start address */\r\n    this.ramStart = readUint32(romImage, 0x1a8);\r\n    /** RAM end address */\r\n    this.ramEnd = readUint32(romImage, 0x1ac);\r\n\r\n    /** ROM checksum, as specified in the header */\r\n    this.checksum = readUint16(romImage, 0x18e);\r\n    \r\n    /** Human-readable description of IO support */\r\n    this.ioSupportFormatted = parseIoString(this.ioSupport);\r\n    this.copyrightFormatted = parseCopyright(this.copyright);\r\n}\r\n\r\n/** Parses the ioSupport property into a human readable format \r\n * @param {string} ioCodeString An array of characters that represent IO device codes\r\n * @returns {string}\r\n*/\r\nfunction parseIoString(ioCodeString) {\r\n    var description = \"\";\r\n    var unknownCodes = false;\r\n\r\n    for (var i = 0; i < ioCodeString.length; i++) {\r\n        var code = ioCodeString[i];\r\n        if (code != ' ') {\r\n            var device = ioCodes[code];\r\n            if (device) {\r\n                if (description.length > 0) description += \", \";\r\n                description += device;\r\n            } else {\r\n                unknownCodes = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (unknownCodes) {\r\n        if (description.length > 0) description += \", \";\r\n        description += \"unknown codes\";\r\n    }\r\n\r\n    if (description.length > 0) {\r\n        return ioCodeString + \" (\" + description + \")\";\r\n    } else {\r\n        return ioCodeString;\r\n    }\r\n}\r\n\r\n/** Parses the copyright property into a human readable format \r\n * @param {string} copyrightString\r\n*/\r\nfunction parseCopyright(copyrightString) {\r\n    if (copyrightString.startsWith(\"(C)T\") && copyrightString.length >= 7) {\r\n        var code = copyrightString.substr(4, 3);\r\n        if(code[0] == '-') code = code.substr(1);\r\n\r\n        var codeNum = parseInt(code);\r\n        if (!isNaN(codeNum)) {\r\n            var companyName = companyCodes[codeNum];\r\n            if (companyName) {\r\n                return copyrightString + \" (\" + companyName + \")\";\r\n            }\r\n        }\r\n\r\n        var textualCode = copyrightString.substr(3, 4).toUpperCase();\r\n        companyName = companyAltCodes[textualCode];\r\n\r\n        switch (copyrightString.substring(3, 4).toUpperCase()) {\r\n            case \"ACLD\": return copyrightString + \" (Ballistic)\";\r\n            case \"ASCI\": return copyrightString + \" (Asciiware)\";\r\n            case \"RSI\": return copyrightString + \" (Razorsoft)\";\r\n            case \"TREC\": return copyrightString + \" (Treco)\";\r\n            case \"VRGN\": return copyrightString + \" (Virgin Games)\";\r\n            case \"WSTN\": return copyrightString + \" (Westone)\";\r\n        }\r\n    }\r\n\r\n    return copyrightString;\r\n}\r\n\r\n\r\nexport default GenHeader;","// @ts-check\r\n\r\n/**\r\n * Object containing Genesis-specific data and functions\r\n */\r\n\r\nimport Rom from '../Rom';\r\nimport Platform from './Platform';\r\nimport RomRegion from '../RomRegion';\r\nimport genUtil from '../romUtils/genUtil';\r\nimport {toHex, HexValue} from '../util'\r\nimport GenHeader from '../romUtils/GenHeader';\r\nconst category = Platform.exDataCategories;\r\n\r\nclass GenPlatform extends Platform {\r\n    constructor() {\r\n        super('GEN', 'Genesis', ['bin', 'gen', 'smd', 'md']);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch (rom) {\r\n        return genUtil.getRomInfo(rom.preview).internalHeader;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader (rom) {\r\n        return genUtil.getRomInfo(rom.preview).externalHeader;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        // var binRom = genUtil.getBinFormat(romImage);\r\n        return this.getBinFormat(rom)\r\n            .then(binRom => {\r\n                var fileRegion = new RomRegion('file', rom, 0,rom.size );\r\n                var romRegion = new RomRegion('rom', binRom, 0, binRom.size);\r\n        \r\n                return [fileRegion, romRegion];\r\n            });\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getExtendedData(rom) {\r\n        return this.getHeader(rom)\r\n            .catch(err => {\r\n                console.warn(err);\r\n                return null;\r\n            })\r\n            .then(header => {\r\n                return Promise.all([header, super.getExtendedData(rom)])\r\n            })\r\n            .then(([header, data]) => {\r\n                if (header) {\r\n                    data.addHeader(\"Title\", header.gameName);\r\n                    data.addHeader(\"Alt Title\", header.altName);\r\n                    data.addHeader(\"Platform\", header.platform);\r\n                    data.addHeader(\"Region\", header.region);\r\n                    data.addHeader(\"Copyright\", header.copyrightFormatted);\r\n                    data.addHeader(\"Product ID\", header.productID);\r\n                    data.addHeader(\"Checksum\",  HexValue.justHex(header.checksum, 4));\r\n                    data.addHeader(\"IO Devices\", header.ioSupportFormatted);\r\n                    data.addHeader(\"Memo\", header.memo);\r\n                    data.addHeader(\"Modem\", header.modem);\r\n            \r\n                    var romStart = toHex(header.romStart, 8);\r\n                    var romEnd = toHex(header.romEnd, 8);\r\n                    var ramStart = toHex(header.ramStart, 8);\r\n                    var ramEnd = toHex(header.ramEnd, 8);\r\n            \r\n                    data.addHeader(\"ROM range\", romStart + \"-\" + romEnd);\r\n                    data.addHeader(\"RAM range\", ramStart + \"-\" + ramEnd);\r\n                }\r\n                return data;\r\n            });\r\n        \r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName(rom) {\r\n        var { externalHeader, interleaved } = genUtil.getRomInfo(rom.preview);\r\n\r\n        if (interleaved) {\r\n            return externalHeader ? \"SMD (headered)\" : \"SMD (no header)\";\r\n        } else {\r\n            return externalHeader ? \"BIN (headered)\" : \"Genesis ROM image (BIN)\";\r\n        }\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    _convertToBin(rom) {\r\n        return genUtil.convertRomToBin(rom)\r\n            .then(result => {\r\n                return result;\r\n            });\r\n    }\r\n\r\n    _decodeHeader(rom) {\r\n        return this.getBinFormat(rom)\r\n            .then(binRom => {\r\n                return binRom.getBytes(0, 0x1000);\r\n            })\r\n            .then(binRomData => {\r\n                return new GenHeader(binRomData);\r\n            })\r\n    }\r\n}\r\n\r\nexport default GenPlatform;","/**\r\n * Object containing NES-specific data and functions\r\n */\r\n\r\nimport smsUtil from '../romUtils/smsUtil';\r\nimport { toHex } from '../util';\r\nimport RomRegion from '../RomRegion';\r\nimport Platform from './Platform';\r\nconst category = Platform.exDataCategories;\r\n\r\nimport Platform_gg_sms from './Platform_gg_sms';\r\n\r\n// function yesNo(bool) {\r\n//     return bool ? \"yes\" : \"no\";\r\n// }\r\n\r\n\r\nclass GgPlatform extends Platform_gg_sms {\r\n    constructor() {\r\n        super(\r\n            // Name, long name, extensions\r\n            'GG', 'Game Gear', ['gg'],\r\n            // Region codes\r\n            [5, 6, 7],\r\n            // File format name\r\n            'Game Gear ROM image'\r\n        );\r\n    }\r\n}\r\n\r\nexport default GgPlatform;","/**\r\n * Object containing NES-specific data and functions\r\n */\r\n\r\nimport smsUtil from '../romUtils/smsUtil';\r\nimport { toHex } from '../util';\r\nimport RomRegion from '../RomRegion';\r\n\r\n\r\nimport Platform_gg_sms from './Platform_gg_sms';\r\n\r\nclass SmsPlatform extends Platform_gg_sms {\r\n    constructor() {\r\n        super(\r\n            // Name, long name, extensions\r\n            'SMS', 'Master System', ['sms'],\r\n            // Region codes\r\n            [3, 4],\r\n            // File format name\r\n            'Master System ROM image'\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SmsPlatform;","// @ts-check\r\n\r\nimport gbaUtil from './gbaUtil';\r\nimport { parseAscii } from '../util';\r\n\r\n/**\r\n * Parses a GBA header\r\n * @param {Uint8Array} romImage \r\n * @param {number} [headerOffset] \r\n * @constructor\r\n */\r\nfunction GbaHeader(romImage, headerOffset) {\r\n    if (headerOffset == null) headerOffset = 0;\r\n\r\n    if (romImage.length < headerOffset + 0x100) throw Error(\"Buffer too small to parse header\");\r\n\r\n    /** Indicates whether the logo cartidge bitmap is valid */\r\n    this.validGbaLogo = gbaUtil.verifyLogo(romImage, headerOffset);\r\n    /** Game title */\r\n    this.title = parseAscii(romImage, headerOffset + 0xa0, 12);\r\n    /** Product code */\r\n    this.gameCode = parseAscii(romImage, headerOffset + 0xac, 4);\r\n    /** Game maker code */\r\n    this.makerCode = parseAscii(romImage, headerOffset + 0xb0, 2);\r\n    /** ROM version */\r\n    this.romVersion = romImage[headerOffset + 0xbc];\r\n    /** Header checksum, as it appears in the header */\r\n    this.headerChecksum = romImage[headerOffset + 0xbd];\r\n    /** Header checksum, as calcluated */\r\n    this.calculatedHeaderChecksum = gbaUtil.calculateHeaderChecksum(romImage, headerOffset);\r\n    /** Whether the header checksum appears to be valid */\r\n    this.headerChecksumValid = this.headerChecksum === this.calculatedHeaderChecksum;\r\n}\r\n\r\n\r\nexport default GbaHeader;","// @ts-check\r\n\r\n/**\r\n * Object containing NES-specific data and functions\r\n */\r\n\r\nimport { toHex, HexValue } from '../util';\r\nimport RomRegion from '../RomRegion';\r\nimport gbaUtil from '../romUtils/gbaUtil';\r\nimport GbaHeader from '../romUtils/GbaHeader';\r\nimport Platform from './Platform';\r\nconst category = Platform.exDataCategories;\r\nimport Rom from '../Rom';\r\n\r\n// function yesNo(bool) {\r\n//     return bool ? \"yes\" : \"no\";\r\n// }\r\n\r\nclass GbaPlatform extends Platform {\r\n    constructor() {\r\n        super('GBA', \"Game Boy Advance\", ['gba']);\r\n    }\r\n     \r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch(rom) {\r\n        return gbaUtil.verifyLogo(rom.preview);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader(rom) {\r\n        return false;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        return Promise.resolve([\r\n            new RomRegion('file', rom, 0, rom.size),\r\n            new RomRegion('rom', rom, 0, rom.size),\r\n        ]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getExtendedData(rom) {\r\n        return this.getHeader(rom)\r\n            .catch(err => {\r\n                console.warn(err);\r\n                return null;\r\n            })\r\n            .then(header => {\r\n                return Promise.all([header, super.getExtendedData(rom)]);\r\n            })\r\n            .then(([header, data]) => {\r\n                if (header) {\r\n                    data.addHeader(\"Logo present\", header.validGbaLogo);\r\n                    data.addHeader(\"Header checksum\", HexValue.justHex(header.headerChecksum, 2));\r\n                    data.addHeader(\"Header checksum valid\", header.headerChecksumValid);\r\n                    data.addHeader(\"Title\", header.title);\r\n                    data.addHeader(\"Game Maker\", header.makerCode);\r\n                    data.addHeader(\"Game Code\", header.gameCode);\r\n        \r\n                    data.addHeader(\"Mask ROM version\", header.romVersion);\r\n                }\r\n                return data;\r\n            });\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName(rom) {\r\n        return \"Game Boy Advance ROM image\";\r\n    }\r\n    \r\n    /** @param {Rom} rom */\r\n    _decodeHeader(rom) {\r\n        return new GbaHeader(rom.preview)        \r\n    }\r\n}\r\n    \r\n\r\nexport default GbaPlatform;","// @ts-check\r\n\r\nconst gbHeaderOffset = 0x100;\r\nconst gbHeaderSize = 0x50;\r\nconst cgbFlagNames = {\r\n    [0x00]: \"no GBC support\",\r\n    [0x80]: \"GBC support\",\r\n    [0xC0]: \"GBC only\",\r\n};\r\n\r\n\r\nimport gbUtil from '../romUtils/gbUtil';\r\nimport { parseAscii } from '../util';\r\n\r\n/**\r\n * Decodes a GameBoy ROM internal header\r\n * @constructor\r\n * @param {Uint8Array} romImage \r\n * @param {number} [headerOffset] must be null or 0x100 to validate ROM checksum.\r\n */\r\nfunction GbHeader(romImage, headerOffset) {\r\n    if (headerOffset == null) headerOffset = gbHeaderOffset;\r\n    if (romImage.length < headerOffset + gbHeaderSize) throw Error(\"Buffer too small to parse header.\");\r\n\r\n    /** Indicates whether the header contains a valid GameBoy logo */\r\n    this.validGbLogo = gbUtil.verifyLogo(romImage);\r\n\r\n    /** Game title */\r\n    this.title = parseAscii(romImage, headerOffset + 0x34, 16);\r\n    /** Cart manufacturer */\r\n    this.manufacturer = parseAscii(romImage, headerOffset + 0x3F, 4);\r\n    /** Color gameboy support flag\r\n     * @type {number}\r\n     */\r\n    this.cgbFlagValue = romImage[headerOffset + 0x43];\r\n    /** Color gameboy support \r\n     * @type {string}\r\n     */\r\n    this.cgbSupport = cgbFlagNames[this.cgbFlagValue] || 'unknown';\r\n    /** Extended licensee data, not present in all carts. */\r\n    this.lincenseeEx = parseAscii(romImage, headerOffset + 0x44, 2);\r\n    /** Super Game Boy support */\r\n    this.supportsSgb = (romImage[headerOffset + 0x46] == 0x03);\r\n    /** Numeric value of cart type */\r\n    this.cartTypeValue = romImage[headerOffset + 0x47];\r\n    /** Name of cart type\r\n     * @type {string}\r\n     */\r\n    this.cartType = GbHeader.gbCartTypeNames[this.cartTypeValue] || 'unknown';\r\n    /** ROM size value */\r\n    this.romSizeValue = romImage[headerOffset + 0x48];\r\n    /** ROM size, as string\r\n     * @type {string}\r\n     */\r\n    this.romSize = GbHeader.gbCartSizeNames[this.romSizeValue] || 'unknown';\r\n    /** Cart RAM size value */\r\n    this.ramSizeValue = romImage[headerOffset + 0x49];\r\n    /** RAM size, as string\r\n     * @type {string}\r\n     */\r\n    this.ramSize = GbHeader.gbRamSizeNames[this.ramSizeValue] || 'unknown';\r\n    /** Whether the header indicates a Japan region game */\r\n    this.japanRegion = (romImage[headerOffset + 0x4a] == 0);\r\n    /** Licensee data. May be superceded by extended licensee data. */\r\n    this.licensee = romImage[headerOffset + 0x4b];\r\n    /** ROM version number */\r\n    this.romVersion = romImage[headerOffset + 0x4c];\r\n    /** Header checksum value as listed in header */\r\n    this.headerChecksum = romImage[headerOffset + 0x4d];\r\n    /** ROM checksum value as listed in header */\r\n    this.romChecksum = (romImage[headerOffset + 0x4e] << 8) | romImage[headerOffset + 0x4f];\r\n\r\n    /** Header checksum, as calculated */\r\n    this.calculatedHeaderChecksum = gbUtil.calculateHeaderChecksum(romImage, headerOffset);\r\n    /** Whether the header checksum is correct */\r\n    this.headerChecksumValid = (this.calculatedHeaderChecksum == this.headerChecksum);\r\n\r\n    /** ROM checksum, as calculated. May be null.\r\n     * @type {number?}\r\n     */\r\n    this.calculatedRomChecksum = null;\r\n    /** Whether the ROM checksum is correct. May be null.\r\n     * @type {boolean?}\r\n     */\r\n    this.romChecksumValid = null;\r\n\r\n    if (headerOffset = gbHeaderOffset) {\r\n        this.calculatedRomChecksum = gbUtil.calculateRomChecksum(romImage);\r\n        this.romChecksumValid = (this.calculatedRomChecksum == this.romChecksum);\r\n    }\r\n\r\n} { // -Methods- //\r\n\r\n    // (none)\r\n    \r\n} { // -Static- //\r\n\r\n    /** Location of the internal header within a GB ROM */\r\n    GbHeader.gbHeaderOffset = gbHeaderOffset;\r\n    /** Size of a GB internal header */\r\n    GbHeader.gbHeaderSize = gbHeaderSize;\r\n\r\n    /** Description of cart types, identified by header codes */\r\n    GbHeader.gbCartTypeNames = {\r\n        [0x00]: \"ROM ONLY\",\r\n        [0x01]: \"MBC1\",\r\n        [0x02]: \"MBC1 RAM\",\r\n        [0x03]: \"MBC1 RAM BATTERY\",\r\n        [0x05]: \"MBC2\",\r\n        [0x06]: \"MBC2 BATTERY\",\r\n        [0x08]: \"ROM RAM\",\r\n        [0x09]: \"ROM RAM BATTERY\",\r\n        [0x0B]: \"MMM01\",\r\n        [0x0C]: \"MMM01 RAM\",\r\n        [0x0D]: \"MMM01 RAM BATTERY\",\r\n        [0x0F]: \"MBC3 TIMER BATTERY\",\r\n        [0x10]: \"MBC3 TIMER RAM BATTERY\",\r\n        [0x11]: \"MBC3\",\r\n        [0x12]: \"MBC3 RAM\",\r\n        [0x13]: \"MBC3 RAM BATTERY\",\r\n        [0x15]: \"MBC4\",\r\n        [0x16]: \"MBC4 RAM\",\r\n        [0x17]: \"MBC4 RAM BATTERY\",\r\n        [0x19]: \"MBC5\",\r\n        [0x1A]: \"MBC5 RAM\",\r\n        [0x1B]: \"MBC5 RAM BATTERY\",\r\n        [0x1C]: \"MBC5 RUMBLE\",\r\n        [0x1D]: \"MBC5 RUMBLE RAM\",\r\n        [0x1E]: \"MBC5 RUMBLE RAM BATTERY\",\r\n        [0xFC]: \"POCKET CAMERA\",\r\n        [0xFD]: \"BANDAI TAMA5\",\r\n        [0xFE]: \"HuC3\",\r\n        [0xFF]: \"HuC1 RAM BATTERY\",\r\n    };\r\n\r\n    /** Description of cart sizes in number of 16KB banks, identified by header codes */\r\n    GbHeader.gbCartSizeNames = {\r\n        [0x00]: \"2 banks\",\r\n        [0x01]: \"4 banks\",\r\n        [0x02]: \"8 banks\",\r\n        [0x03]: \"16 banks\",\r\n        [0x04]: \"32 banks\",\r\n        [0x05]: \"64 banks\",\r\n        [0x06]: \"128 banks\",\r\n        [0x07]: \"256 banks\",\r\n        [0x52]: \"72 banks\",\r\n        [0x53]: \"80 banks\",\r\n        [0x54]: \"96 banks\",\r\n    };\r\n\r\n    GbHeader.gbRamSizeNames = {\r\n        0: \"0 KByte\",\r\n        1: \"2 KByte\",\r\n        2: \"8 KByte\",\r\n        3: \"32 KByte\",\r\n    }\r\n}\r\n\r\nexport default GbHeader;","// @ts-check\r\n\r\n/**\r\n * Object containing NES-specific data and functions\r\n */\r\n\r\nimport { toHex, HexValue } from '../util';\r\nimport RomRegion from '../RomRegion';\r\nimport gbUtil from '../romUtils/gbUtil';\r\nimport GbHeader from '../romUtils/GbHeader';\r\nimport Platform from './Platform';\r\nconst category = Platform.exDataCategories;\r\nimport Rom from '../Rom';\r\n\r\n// function yesNo(bool) {\r\n//     return bool ? \"yes\" : \"no\";\r\n// }\r\n\r\nclass GbPlatform extends Platform {\r\n    constructor() {\r\n        super('GB', \"Game Boy\", ['gb', 'gbc']);\r\n    }\r\n    \r\n    /** @param {Rom} rom */\r\n    isPlatformMatch(rom) {\r\n        return gbUtil.verifyLogo(rom.preview);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader(rom) {\r\n        // not supported for this platform.\r\n        return false;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        return Promise.resolve([\r\n            new RomRegion('file', rom, 0, rom.size),\r\n            new RomRegion('rom', rom, 0, rom.size),\r\n        ]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getExtendedData(rom) {\r\n        return this.getHeader(rom)\r\n            .catch(err => {\r\n                console.warn(err);\r\n                return null;\r\n            })\r\n            .then(header => {\r\n                return Promise.all([header, super.getExtendedData(rom)])\r\n            })\r\n            .then(([header, data]) => {\r\n                if (header) {\r\n                    data.addRom(\"ROM checksum\", HexValue.justHex(header.romChecksum, 4));\r\n                    data.addRom(\"Checksum valid\", header.romChecksumValid);\r\n            \r\n                    data.addHeader(\"Logo present\", header.validGbLogo);\r\n                    data.addHeader(\"Header checksum\", HexValue.justHex(header.headerChecksum, 2));\r\n                    data.addHeader(\"Header checksum valid\", header.headerChecksumValid);\r\n                    data.addHeader(\"ROM checksum\", HexValue.justHex(header.romChecksum,4));\r\n                    data.addHeader(\"ROM checksum valid\", header.romChecksumValid);\r\n                    data.addHeader(\"Title\", header.title);\r\n                    data.addHeader(\"Manufacturer\", header.manufacturer);\r\n                    data.addHeader(\"Gameboy Color support\", header.cgbSupport);\r\n                    data.addHeader(\"Super Gameboy support\", header.supportsSgb);\r\n                    data.addHeader(\"Cart type\", header.cartType);\r\n            \r\n                    data.addHeader(\"ROM size\", header.romSize);\r\n                    data.addHeader(\"RAM size\", header.ramSize);\r\n            \r\n                    data.addHeader(\"Mask ROM version\", header.romVersion);\r\n            \r\n            \r\n                    data.addHeader(\"Licensee code\", HexValue.hex(header.licensee, 2));\r\n                    data.addHeader(\"Licensee code (extended)\", header.lincenseeEx);  \r\n                }\r\n\r\n                return data;\r\n            });\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName (rom) {\r\n        return \"Gameboy ROM image\";\r\n    }\r\n\r\n    _decodeHeader(rom) {\r\n        return Promise.resolve(new GbHeader(rom.preview));\r\n    }\r\n}\r\n\r\nexport default GbPlatform;","// @ts-check\r\n\r\n/*\r\n    Represents an internal snes header\r\n*/\r\n\r\nimport snesUtil from './snesUtil';\r\n\r\nclass SnesHeader{\r\n    /**\r\n     * \r\n     * @param {Uint8Array} romImage \r\n     * @param {boolean} hasExternalHeader \r\n     */\r\n    constructor(romImage, hasExternalHeader) {\r\n        /** Location of the internal header within the file */\r\n        this.internalHeaderOffset = 0;\r\n        /** Memory mapping used be the cartridge. */\r\n        this.mapping = \"unknown\";\r\n        /** Size of the external header. Zero for no header. */\r\n        this.externalHeaderSize = hasExternalHeader ? snesUtil.externalHeaderSize : 0;\r\n        /** Indicates whether a valid header could be found and decoded */\r\n        this.valid = true;\r\n    \r\n        if (romImage.length >= SnesHeader.minimumRomSize) {\r\n            \r\n            var layout = snesUtil.checkHiromOrLorom(romImage);\r\n    \r\n            if (layout.exhirom) {\r\n                this.internalHeaderOffset = this.externalHeaderSize + SnesHeader.exhiromHeaderOffset;\r\n                this.mapping = \"exhirom\";\r\n            } else if (layout.lorom && !layout.hirom) {\r\n                this.internalHeaderOffset = this.externalHeaderSize + SnesHeader.loromHeaderOffset;\r\n                this.mapping = \"lorom\";\r\n            } else if (layout.hirom && !layout.lorom) {\r\n                this.internalHeaderOffset = this.externalHeaderSize + SnesHeader.hiromHeaderOffset;\r\n                this.mapping = \"hirom\";\r\n            } else {\r\n                // in the event that the hirom/lorom heuristic gives us an ambiguous result, we guess\r\n                this.internalHeaderOffset = this.externalHeaderSize + SnesHeader.loromHeaderOffset;\r\n            }\r\n    \r\n            /** A 16-bit internal checksum */\r\n            this.checksum = (0xFFFF & (\r\n                (romImage[this.internalHeaderOffset + 0x1F] << 8) |\r\n                (romImage[this.internalHeaderOffset + 0x1e])\r\n            ));\r\n            /** A 16-bit complement to the internal checksum */\r\n            this.checksumComplement = (0xFFFF & (\r\n                (romImage[this.internalHeaderOffset + 0x1D] << 8) |\r\n                (romImage[this.internalHeaderOffset + 0x1C])\r\n            ));\r\n        } else {\r\n            this.internalHeaderOffset = this.externalHeaderSize;\r\n            this.mapping = \"none\";\r\n            this.checksum = 0;\r\n            this.checksumComplement = 0;\r\n            this.valid = false;\r\n        }\r\n    \r\n    \r\n    }\r\n}\r\n\r\nSnesHeader.loromHeaderOffset = 0x7fc0;\r\nSnesHeader.hiromHeaderOffset = 0xffc0;\r\nSnesHeader.exhiromHeaderOffset = 0x40ffc0;\r\nSnesHeader.minimumRomSize = 0x10000;\r\n\r\nexport default SnesHeader;","// @ts-check\r\n\r\nimport snesUtil from '../romUtils/snesUtil';\r\nimport { toHex, HexValue } from '../util';\r\nimport SnesHeader from '../romUtils/SnesHeader';\r\nimport RomRegion from '../RomRegion';\r\nimport Platform from './Platform';\r\nconst category = Platform.exDataCategories;\r\nimport Rom from '../Rom';\r\n\r\nconst maxRomBufferSize = 8200000; // bytes\r\n\r\nclass SnesPlatform extends Platform {\r\n    constructor() {\r\n        super('SNES', 'Super Nintendo Entertainment System', ['smc', 'sfc', 'swc', 'fig']);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch (rom) {\r\n        if (rom.size < 0x2000) return false;\r\n\r\n        var header = new SnesHeader(rom.preview, this.hasExternalHeader(rom));\r\n        // I've sacrificed a full checksum verification here because we can't stream\r\n        // the file syncronously in JS and this method must be syncronous.\r\n        // It wouldn't be terribly unreasonable to increase the ROM 'preview' size\r\n        // to a large enough size that we would have immediate access to 99% of ROMs.\r\n        var checksumChecksOut = 0xFFFF === (header.checksum ^ header.checksumComplement);\r\n\r\n        if (checksumChecksOut) return true;\r\n        if (snesUtil.hasGoodSmcHeader(rom.preview)) return true;\r\n        if (snesUtil.hasGoodSwcHeader(rom.preview)) return true;\r\n        \r\n        return false;\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader (rom) {\r\n        // Check for iNES header tag ('NES\\u001a')\r\n        return snesUtil.hasExternalHeader(rom.size);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        var fileRegion = new RomRegion('file', rom.file, 0, rom.size);\r\n        var romRegion;\r\n\r\n        if (this.hasExternalHeader(rom)) {\r\n            romRegion = new RomRegion('rom', rom.file, snesUtil.externalHeaderSize, rom.size - snesUtil.externalHeaderSize);\r\n        } else {\r\n            romRegion = new RomRegion('rom', rom.file, 0, rom.size);\r\n        }\r\n\r\n        return Promise.resolve([fileRegion, romRegion]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getExtendedData(rom) {\r\n        var bytesPromise;\r\n        if (rom.size < rom.preview.length || rom.size > maxRomBufferSize) {\r\n            bytesPromise = rom.preview;\r\n        } else {\r\n            bytesPromise = rom.getBytes(0, rom.size);\r\n        }\r\n\r\n        return Promise.all([this.getHeader(rom), bytesPromise, super.getExtendedData(rom)])\r\n            .then(([header, romImage, data]) => {\r\n                var checksum = snesUtil.calculateChecksum(romImage);\r\n                var mapping = { hirom: \"HiROM\", lorom: \"LoROM\" }[header.mapping] || header.mapping;\r\n        \r\n                    \r\n                data.addRom(\"Mapping\", mapping);\r\n                data.addRom(\"Calculated checksum\", HexValue.justHex(checksum, 4));\r\n\r\n                if (header.valid) {\r\n                    data.addHeader(\"Header offset\", HexValue.hex(header.internalHeaderOffset));\r\n                    data.addHeader(\"Checksum\", HexValue.justHex(header.checksum, 4));\r\n                    data.addHeader(\"Checksum complement\", HexValue.justHex(header.checksumComplement, 2));\r\n                    data.addRom(\"Checksum valid\", (checksum === header.checksum) ? \"Yes\": \"No\" );\r\n                }\r\n\r\n                \r\n                return data;\r\n            });\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName (rom) {\r\n        if (snesUtil.hasGoodSmcHeader(rom.preview)) return \"Super Magic Com\";\r\n        if (snesUtil.hasGoodSwcHeader(rom.preview)) return \"Super Wild Card\";\r\n        if (this.hasExternalHeader(rom)) return \"SNES ROM image (headered)\";\r\n        return \"SNES ROM image\";\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    _decodeHeader(rom) {\r\n        return Promise.resolve( new SnesHeader(rom.preview, this.hasExternalHeader(rom)));\r\n    }\r\n}\r\n\r\nexport default SnesPlatform;","// @ts-check\r\n\r\n/**\r\n * Object containing NES-specific data and functions\r\n */\r\n\r\nimport RomRegion from '../RomRegion';\r\nimport Rom from '../Rom';\r\nimport Platform from './Platform';\r\nconst category = Platform.exDataCategories;\r\n\r\n/**\r\n * Checks whether the rom image has the 'FDS' external header identifier\r\n * @param {Uint8Array} romImage \r\n * @returns {boolean}\r\n */\r\nfunction hasFdsHeaderTag(romImage) {\r\n    return (romImage.length > 0x10 && (romImage[0] === 0x46 && romImage[1] === 0x44 && romImage[2] === 0x53 && romImage[3] === 0x1a));\r\n}\r\n\r\nclass FdsPlatform extends Platform {\r\n    constructor() {\r\n        super('FDS', \"Famicom Disk System\", ['fds']);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch (rom) {\r\n        // FDS ROMs are identified by their FDS (external) headers.\r\n        return hasFdsHeaderTag(rom.preview);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader(rom) {\r\n        // Check for iNES header tag ('NES\\u001a')\r\n        return hasFdsHeaderTag(rom.preview);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        var fileRegion = new RomRegion('file', rom, 0, rom.size);\r\n        var romRegion;\r\n        if (this.hasExternalHeader(rom)) {\r\n            romRegion = new RomRegion('rom', rom, 0x10, rom.size - 0x10);\r\n        } else {\r\n            romRegion = new RomRegion('rom', rom, 0, rom.size);\r\n        } \r\n\r\n        return Promise.resolve([fileRegion, romRegion]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName(rom) {\r\n        return this.hasExternalHeader(rom) ? 'FDS file' : 'rom image';\r\n    }\r\n}\r\n\r\n// module.exports = nesPlatform;\r\nexport default FdsPlatform;","import { HexValue } from \"./util\";\r\n\r\n/*\r\n    Extended Data\r\n\r\n    Used to accumulate miscellaneous data about a ROM.\r\n*/\r\n// @ts-check\r\n\r\nclass ExtendedData {\r\n    constructor() {\r\n        /** @type {{category: string, label: string, value: string}[]} */\r\n        this.data = [];\r\n    }\r\n\r\n    /**\r\n     * Adds data to the header category\r\n     * @param {string} name \r\n     * @param {string | HexValue} value \r\n     */\r\n    addHeader(name, value) {\r\n        this.addAny('header', name, value.toString());\r\n    }\r\n\r\n    \r\n    /**\r\n     * Adds data to the header category\r\n     * @param {string} name \r\n     * @param {string | HexValue} value \r\n     */\r\n    addRom(name, value) {\r\n        this.addAny('rom', name, value.toString());\r\n    }\r\n\r\n\r\n    /**\r\n     * Adds data to the specified category\r\n     * @param {string} category \r\n     * @param {string} name \r\n     * @param {string | HexValue} value  \r\n     */\r\n    addAny(category, name, value) {\r\n        this.data.push({\r\n            category: category,\r\n            label: name,\r\n            value: value.toString()\r\n        });\r\n    }\r\n\r\n    getData() {\r\n        // return new array of clones        \r\n        return this.data.map(item => Object.assign({}, item));\r\n    }\r\n}\r\n\r\nexport default ExtendedData;","// @ts-check\r\n\r\nvar headerFlags = {\r\n    // byte 6\r\n    verticalMirroring: 1,\r\n    battery: 2,\r\n    trainer: 4,\r\n    fourScreen: 8,\r\n    mapper: 240, // 6 & 7\r\n    \r\n    // byte 7\r\n    vsUnisystem: 1,\r\n    playchoice10: 2,\r\n    nes2: 12,\r\n\r\n    // byte 9\r\n    pal: 1,\r\n\r\n}\r\n\r\nvar mappers = [];\r\n{ // Is there a good way to initialize sparse arrays? ¯\\_(ツ)_/¯ \r\n   mappers[0] = 'NoMapper';\r\n   mappers[1] = 'MMC1';\r\n   mappers[2] = 'UxROM';\r\n   mappers[3] = 'CxROM';\r\n   mappers[4] = 'MMC3';\r\n   mappers[5] = 'MMC5';\r\n   mappers[6] = 'FFE_F4';\r\n   mappers[7] = 'AxROM';\r\n   mappers[8] = 'FFE_F3';\r\n   mappers[9] = 'MMC2';\r\n   mappers[10] = 'MMC4';\r\n   mappers[11] = 'ColorDreams';\r\n   mappers[12] = 'FFE_F6';\r\n   mappers[13] = 'CPROM';\r\n   mappers[15] = 'Contra_100_in_1';\r\n   mappers[16] = 'Bandai';\r\n   mappers[17] = 'FFE_F8';\r\n   mappers[18] = 'Jaleco_SS8806';\r\n   mappers[19] = 'Namcot_106';\r\n   mappers[20] = 'Mapper_20';\r\n   mappers[21] = 'VRC4';\r\n   mappers[22] = 'VRC2_A';\r\n   mappers[23] = 'VRC2_B';\r\n   mappers[24] = 'VRC6';\r\n   mappers[25] = 'VRC4_Y';\r\n   mappers[32] = 'Irem_G101';\r\n   mappers[33] = 'Taito_TC0190';\r\n   mappers[34] = 'BxRom';\r\n   mappers[64] = 'Tengen_RAMBO_1';\r\n   mappers[65] = 'Irem_H_3001';\r\n   mappers[66] = 'GNROM';\r\n   mappers[67] = 'Sunsoft_3';\r\n   mappers[68] = 'Sunsoft_4';\r\n   mappers[69] = 'Sunsoft_FME_07';\r\n   mappers[71] = 'Camerica';\r\n   mappers[73] = 'VCR3';\r\n   mappers[74] = 'MMC3_Pirate_Variant';\r\n   mappers[75] = 'VRC1';\r\n   mappers[78] = 'Irem_74HC161';\r\n   mappers[79] = 'Nina003';\r\n   mappers[80] = 'X005';\r\n   mappers[81] = 'C075';\r\n   mappers[82] = 'X1_17';\r\n   mappers[83] = 'Cony';\r\n   mappers[84] = 'PasoFami';\r\n   mappers[85] = 'VRC7';\r\n   mappers[91] = 'PC_HK_SF3';\r\n   mappers[94] = 'Capcom';\r\n   mappers[118] = 'TxSROM';\r\n   mappers[119] = 'TQROM';\r\n   mappers[180] = 'Nichibutsu';\r\n}\r\n\r\n/**\r\n * Decodes an iNES ROM header\r\n * @constructor\r\n * @param {Uint8Array} romImage iNES ROM image\r\n */\r\nfunction iNESHeader(romImage) {\r\n    if (!(this instanceof iNESHeader)) throw Error('Missing new on iNESHeader constructor');\r\n\r\n    /** The 4-byte string at the beginning of the header */\r\n    this.magicNumber = (\r\n        String.fromCharCode(romImage[0]) +\r\n        String.fromCharCode(romImage[1]) +\r\n        String.fromCharCode(romImage[2]) +\r\n        String.fromCharCode(romImage[3])\r\n    );\r\n\r\n    /** Boolean indicating whether the magic number is correct for an iNES ROM */\r\n    this.magicNumberIsCorrect = (this.magicNumber == 'NES\\x1a');\r\n\r\n    /** The number of 16k PRG ROM pages in the ROM image */\r\n    this.prgRomCount = romImage[4];\r\n    /** The number of 8k CHR ROM pages in the ROM image */\r\n    this.chrRomCount = romImage[5];\r\n    /** The number of 8k PRG RAM pages for the ROM */\r\n    this.prgRamCount = romImage[8];\r\n\r\n    if (romImage[6] & headerFlags.fourScreen) {\r\n        /** The screen mirroring used for rendering */\r\n        this.mirroring = \"4-screen\"\r\n    } else {\r\n        var isVertical = (romImage[6] & headerFlags.verticalMirroring);\r\n        this.mirroring = isVertical ? \"vertical\" : \"horizontal\";\r\n    }\r\n\r\n    /** Whether the cartridge contains persistent (save) memory */\r\n    this.hasBattery = !!(romImage[6] & headerFlags.battery);\r\n    /** Whether the cartridge contains a trainer (used for pirate games) */\r\n    this.hasTrainer = !!(romImage[6] & headerFlags.trainer);\r\n    /** Whether the ROM is intended for VS Unisystem */\r\n    this.vsUnisystem = !!(romImage[7] & headerFlags.vsUnisystem);\r\n    /** Whether the ROM is intended for PlayChoice 10 */\r\n    this.playchoice10 = !!(romImage[7] & headerFlags.playchoice10);\r\n    /** Whether the ROM Header uses the extended NES 2.0 format */\r\n    this.nes2 = (romImage[7] & headerFlags.nes2) == 2;\r\n    /** Whether the PAL flag is set. */\r\n    this.palFlagSet = romImage[9] & headerFlags.pal;\r\n\r\n    /** Mapper number to identify cartridge hardware */\r\n    this.mapper =\r\n        ((romImage[6] & headerFlags.mapper) >> 4) |\r\n        (romImage[7] & headerFlags.mapper);\r\n    /** Mapper name (board, MMC, or other hardware configuration) */\r\n    this.mapperName = mappers[this.mapper] || 'unknown';\r\n}\r\n\r\nexport default iNESHeader;","//@ts-check\r\n\r\n/**\r\n * Object containing NES-specific data and functions\r\n */\r\n\r\nimport RomRegion from '../RomRegion';\r\nimport iNESHeader from '../romUtils/iNESHeader';\r\nimport Platform from './Platform';\r\nimport Rom from '../Rom';\r\nimport { HexValue } from '../util';\r\nconst category = Platform.exDataCategories;\r\n\r\n\r\nclass NesPlatform extends Platform {\r\n    constructor() {\r\n        super(\"NES\", \"Nintendo Entertainment System\", [\"nes\"]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    isPlatformMatch(rom) {\r\n        return this.hasExternalHeader(rom);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    hasExternalHeader(rom) {\r\n        var romImage = rom.preview;\r\n        // Check for iNES header tag ('NES\\u001a')\r\n        return (romImage.length > 0x10 && (romImage[0] == 0x4e && romImage[1] == 0x45 && romImage[2] == 0x53 && romImage[3] == 0x1a));\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getHashRegions(rom) {\r\n        var fileRegion = new RomRegion('file', rom, 0,rom.size);\r\n\r\n        var romRegion;\r\n        if (this.hasExternalHeader(rom)) {\r\n            romRegion = new RomRegion('rom', rom, 0x10, rom.size - 0x10);\r\n        } else {\r\n            romRegion = new RomRegion('rom', rom, 0, rom.size);\r\n        }\r\n\r\n        return Promise.resolve([fileRegion, romRegion]);\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getExtendedData(rom) {\r\n        return Promise.all([this.getHeader(rom), super.getExtendedData(rom)])\r\n            .then(([header, data]) => {\r\n                if (header) {\r\n                    data.addHeader(\"CHR banks\", header.chrRomCount);\r\n                    data.addHeader(\"PRG banks\", header.prgRomCount);\r\n                    data.addHeader(\"Battery backed\", header.hasBattery);\r\n                    data.addHeader(\"Mapper #\", HexValue.hexParen(header.mapper));\r\n                    data.addHeader(\"Mapper name\", header.mapperName || 'unknown');\r\n                    data.addHeader(\"Mirroring\", header.mirroring);\r\n                    data.addHeader(\"Region\", header.palFlagSet ? \"PAL\" : \"NTSC\");\r\n                    data.addHeader(\"Trainer present\", header.hasTrainer);\r\n                    data.addHeader(\"VS Unisystem\", header.vsUnisystem);\r\n                    data.addHeader(\"Placechoice 10\", header.playchoice10);\r\n                    data.addHeader(\"NES 2.0\", header.nes2);\r\n                }\r\n                \r\n                return data;\r\n            });\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    getFormatName(rom) {\r\n        return this.hasExternalHeader(rom) ? 'iNES' : 'NES ROM image';\r\n    }\r\n\r\n    /** @param {Rom} rom */\r\n    _decodeHeader(rom) {\r\n        return new iNESHeader(rom.preview);\r\n    }\r\n\r\n}\r\n\r\nexport default NesPlatform;","\r\nimport NesPlatform from './nes';\r\nimport FdsPlatform from './fds';\r\nimport SnesPlatform from './snes';\r\nimport GbPlatform from './gb';\r\nimport GbaPlatform from './gba';\r\nimport SmsPlatform from './sms';\r\nimport GgPlatform from './gg';\r\nimport GenPlatform from './gen';\r\nimport NgpPlatform from './ngp';\r\nimport NdsPlatform from './nds';\r\nimport N64Platform from './n64';\r\n\r\n\r\n// export default [NES, SNES, GB, GBA, FDS, SMS, GG, GEN, NGP, NDS];\r\n\r\nexport default [\r\n    new NesPlatform(),\r\n    new SnesPlatform(),\r\n    new GenPlatform(),\r\n    new FdsPlatform(),\r\n    new GbPlatform(),\r\n    new GbaPlatform(),\r\n    new NgpPlatform(),\r\n    new GgPlatform(),\r\n    new SmsPlatform(),\r\n    new NdsPlatform(),\r\n    new N64Platform(),\r\n];\r\n","/*\r\n *  platformLookup\r\n *\r\n *  Implements platform identification behavior based on heuristic matches\r\n *  and falling back to or disambiguating by file extension.\r\n */\r\n\r\nimport plats from './platforms';\r\nimport Platform from './platforms/Platform';\r\nimport Rom from './Rom';\r\nimport UnknownPlatform from './platforms/unknown';\r\n\r\nvar platformLookup = {\r\n    /** @type {Platform[]} */\r\n    platformList: [],\r\n\r\n    /** The platform used when  */\r\n    unknownPlatform: new UnknownPlatform(),\r\n\r\n    /**\r\n     * @param {Rom} rom ROM to be examined\r\n     * @param {string} ext File extension, not including the dot, or null if not applicable.\r\n     * @returns {{method: string, platform: Platform}} - The associated platform, and the method used \r\n     * to identify the platform\r\n     */\r\n    getAssociatedPlatform: function (rom, ext) {\r\n        var platformMatches = [];\r\n\r\n        // Match by contents\r\n        this.platformList.forEach(plat => {\r\n            if (plat.isPlatformMatch(rom)) {\r\n                platformMatches.push(plat);\r\n            }\r\n        });\r\n        var noContentMatches = platformMatches.length === 0;\r\n\r\n        if (platformMatches.length === 1) return { method: 'contents', platform: platformMatches[0] };\r\n\r\n        // If there isn't exactly one content match, and no extension is provided, we can't disambiguate\r\n        if (!ext) return { method: 'none', platform: null };\r\n\r\n        // If there are no candidates, we'll check ALL platforms by extention\r\n        if (noContentMatches) platformMatches = this.platformList.slice(0);\r\n\r\n        // filter by extension\r\n        platformMatches = platformMatches.filter(plat =>\r\n            plat.knownExtensions.find(platExt => platExt.toUpperCase() === ext.toUpperCase())\r\n        );\r\n\r\n        var matchMethod = noContentMatches ? 'extension' : 'contents extension';\r\n        if (platformMatches.length === 1) return { method: matchMethod, platform: platformMatches[0] };\r\n        \r\n        return {\r\n            method: platformMatches.length >= 1 ? 'ambiguous' : 'none',\r\n            platform: this.unknownPlatform\r\n        };\r\n        \r\n    }\r\n};\r\n\r\n// Load platform objects from platforms dir\r\n{\r\n    plats.forEach(platformObj => {\r\n        if (platformLookup.hasOwnProperty(platformObj.name) || platformLookup[platformObj.name]) {\r\n            console.error(\"Invalid platform name: \\\"\" + platformObj.name + \"\\\" conflicts with reserved name and will be excluded.\")\r\n        } else {\r\n            platformLookup[platformObj.name] = platformObj;\r\n            platformLookup.platformList.push(platformObj);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport default platformLookup;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*\r\n    RomData\r\n   \r\n    Orchestrates the hashing, header decoding, and database logic\r\n    for a file.\r\n*/\r\n\r\nimport RomRegion from './RomRegion';\r\nimport platformLookup from './platformLookup';\r\nimport * as hasher from './hash';\r\nimport romDb from './romDb';\r\nimport RomHasher from './RomHasher';\r\nimport Rom from './Rom';\r\nimport { HexValue } from './util';\r\n\r\n/**\r\n * @constructor\r\n * @param {Rom} rom ROM image to examine\r\n * @param {string[]} hashAlgos A string specifying the hash in the form 'content_algorithm',\r\n * @param {function(number):void} [progressCallback]\r\n * where content matches a portion of the ROM identified by Platform.getHashRegions and\r\n * the algorithm matches the name of a supported hash function in the Hasher module.\r\n */\r\nfunction RomData(rom, hashAlgos, progressCallback) {\r\n    hashAlgos = hashAlgos || ['file_sha1', 'rom_sha1', 'file_md5', 'rom_md5', 'file_crc32', 'rom_crc32'];\r\n    var ext = rom.fileExtension; //getExtension(filename);\r\n    var plat = platformLookup.getAssociatedPlatform(rom, ext);\r\n\r\n    /** Private */\r\n    this._cancel = null;\r\n\r\n    /** Cancels the ROM hashing operation */\r\n    this.cancel = () => { if (this._cancel) this._cancel() };\r\n    /** Identifies the method used to identify the ROM's platform */\r\n    this.platformIdent = plat.method;\r\n    /** Provides platform-specific functionality */\r\n    this.platform = plat.platform;\r\n    /** Whether the file contains a header that is not part of the ROM image */\r\n    this.hasExternalHeader = plat.platform.hasExternalHeader(rom);\r\n    /** Name and version info regarding the database associated with the ROM's platform */\r\n    this.dbInfo = { name: 'not found', version: 'not found' };\r\n    /** Canonical name of the ROM, if found in the database */\r\n    this.dbMatch = 'not found';\r\n    /** A string representing the file format the ROM uses */\r\n    this.format = plat.platform.getFormatName(rom);\r\n\r\n    var extendedDataPromise = plat.platform.getExtendedData(rom)\r\n        .then(extendedData => {\r\n            this.extendedData = extendedData.getData();\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            this.extendedData = [];\r\n        });\r\n    \r\n    var hashPromise = plat.platform.getHashRegions(rom)\r\n        .then(hashRegions => {\r\n            this.hashRegions = hashRegions;\r\n            var hasher = new RomHasher(rom, this.hashRegions, hashAlgos, progressCallback);\r\n            this._cancel = hasher.cancel;\r\n            return hasher.performHashes();\r\n        })\r\n        .then(hashlist => {\r\n            this.hashes = hashlist;\r\n            // Hash casing should be consistent with everything else.\r\n            if (HexValue.upperCaseHex) {\r\n                this.hashes.forEach(hash => hash.value = hash.value.toUpperCase());\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            this.hashes = [];\r\n        });\r\n    \r\n    var dbGetPromise = romDb(this.platform.name)\r\n        .catch(err => {\r\n            console.error(err);\r\n            return null;\r\n        });\r\n    \r\n    var dbLookupPromise = Promise.all([dbGetPromise, hashPromise])\r\n        .then(([db]) => {\r\n            if (db) {\r\n                if (db.meta) {\r\n                    this.dbInfo = {\r\n                        name: db.meta.name || this.dbInfo.name,\r\n                        version: db.meta.version || this.dbInfo.version\r\n                    };\r\n                }\r\n\r\n                var hashRegion = db.meta.hashContent;\r\n                var rom_sha1 = this.hashes.find(hash => hash.algoName === 'sha1' && hash.region.name === hashRegion);\r\n                if (rom_sha1) {\r\n                    return db.getTitle(rom_sha1.value);\r\n                }\r\n            }\r\n            \r\n            return null;\r\n        })\r\n        .then(title => {\r\n            if(title) this.dbMatch = title;\r\n        })\r\n        .catch(console.error);\r\n\r\n    /** Private */\r\n    this._processingCompletePromise = Promise.all([hashPromise, dbLookupPromise, extendedDataPromise]);\r\n}\r\n\r\n/** Returns a promise that resolves to a RomData object. The promise has\r\n *  a cancel method that will stop analyzing the ROM. The promise will \r\n *  return the RomData object with any available information populated.\r\n *  @param {Rom} rom \r\n *  @param {string[]} [algos] A string specifying the hash in the form 'content_algorithm',\r\n *  @param {function(number):void} [progressCallback]\r\n */\r\nfunction getData(rom, algos, progressCallback) {\r\n    /** @type {RomData} */\r\n    var romData;\r\n    var promise = rom.loaded.then(() => {\r\n        romData = new RomData(rom, algos, progressCallback);\r\n        var result = romData._processingCompletePromise.then(() => {\r\n            delete romData._processingCompletePromise; // done with this\r\n            return romData;\r\n        });\r\n\r\n        return result;\r\n    });\r\n\r\n    promise.cancel = () => romData.cancel();\r\n    return promise;\r\n}\r\n\r\nexport default { getData: getData };\r\n","/*\r\n *  hasher public interface\r\n *  \r\n *  Usage:\r\n *      // Display object with hashes, db match, etc.\r\n *      hasher.getRomData(someFileInput.files[0])\r\n *          .then(data => console.log(data));\r\n * \r\n *      // Convenience method to get binary data from a File object\r\n *      hasher.getFileBytes(someFileInput.files[0])\r\n *          .then(buffer => console.log(buffer));\r\n * \r\n *  Webpack:\r\n *      In the root directory, run the command `npm run build`.\r\n *      This runs webpack, and copies the bundle and the ROM\r\n *      database to the server folder.\r\n * \r\n *  Test Server:\r\n *      Build the project as described above first. From the\r\n *      \"server\" directory, run the command `node index.js`.\r\n *      You can the access the test page at \r\n *      http://localhost:8000/\r\n */\r\n\r\n//@ts-check\r\n\"use strict\";\r\n\r\nimport RomData from './RomData';\r\nimport Rom from './Rom';\r\nimport { HexValue } from './util';\r\n\r\n/** Creates an object that can produce metadata for a ROM file\r\n *  @param {File} romFile File to process. A blob can be processed provided \r\n *                that it has a name property containing a string\r\n */\r\nclass Hasher {\r\n    constructor(romFile) {\r\n        this._rom = new Rom(romFile);\r\n        this._cancel = null;\r\n    }\r\n\r\n    /** Begins processing the ROM. Returns a promise that resolves to a\r\n     *  @param {string[]} [algos] An array of hashing algorithms to use, from: 'sha1', 'md5', 'crc32'\r\n     *  @param {function(number):void} [progressCallback]\r\n     */\r\n    getRomData(algos, progressCallback) {\r\n        if (this._rom == null) throw Error('Can not make multiple calls to getRomData');\r\n\r\n        // RomData class expects requested algoithms to take the form content_algorithm\r\n        var algoList = null;\r\n        if (algos) {\r\n            // Apply the specified algorightms to both the file and the ROM\r\n            var fileAlgos = algos.map(algo => 'file_' + algo);\r\n            var romAlgos = algos.map(algo => 'rom_' + algo);\r\n            algoList = fileAlgos.concat(romAlgos);\r\n        }\r\n\r\n        /** @type {Promise<any> & {[x: string]: any}} */\r\n        var promise = RomData.getData(this._rom, algoList, progressCallback);\r\n        this._cancel = promise.cancel;\r\n\r\n        // Let things be collected\r\n        this._rom = null;\r\n        promise.then(() => this._cancel = null);\r\n\r\n        return promise;\r\n    }\r\n\r\n    cancel() {\r\n        if (this._cancel) this._cancel();\r\n        this._cancel = null;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a number formatted as hex with a style consistent with Hasher-js's output.\r\n * @param {number} value - Value to format\r\n * @param {number} [minLength] - Minimum number of digits to use. Values will be zero-padded if necessary.\r\n * @param {boolean} [prefixed] - If true, a hexidecimal prefix such as a dollar sign will be prepended\r\n */\r\nHasher.FormatHex = function (value, minLength, prefixed) { \r\n    if (prefixed) {\r\n        return HexValue.hex(value, minLength || 0).toString();\r\n    } else {\r\n        return HexValue.justHex(value, minLength || 0).toString();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * detect IE\r\n * returns version of IE or false, if browser is not Internet Explorer\r\n */\r\nfunction detectIE() {\r\n    var ua = window.navigator.userAgent;\r\n\r\n    // Test values; Uncomment to check result …\r\n\r\n    // IE 10\r\n    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\r\n\r\n    // IE 11\r\n    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\r\n\r\n    // Edge 12 (Spartan)\r\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\r\n\r\n    // Edge 13\r\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\r\n\r\n    var msie = ua.indexOf('MSIE ');\r\n    if (msie > 0) {\r\n        // IE 10 or older => return version number\r\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n    }\r\n\r\n    var trident = ua.indexOf('Trident/');\r\n    if (trident > 0) {\r\n        // IE 11 => return version number\r\n        var rv = ua.indexOf('rv:');\r\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\r\n    }\r\n\r\n    var edge = ua.indexOf('Edge/');\r\n    if (edge > 0) {\r\n        // Edge (IE 12+) => return version number\r\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\r\n    }\r\n\r\n    // other browser\r\n    return null;\r\n}\r\n\r\nvar isIE = !!detectIE(); // true if it's IE\r\n// @ts-ignore\r\nwindow.poopMode = isIE;\r\n\r\n// 'export default Hasher' produces an object {_deafult: Hasher}... not what we want\r\nmodule.exports = Hasher;"],"sourceRoot":""}